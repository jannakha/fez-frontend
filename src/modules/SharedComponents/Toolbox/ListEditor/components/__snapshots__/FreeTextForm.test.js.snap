// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FreeTextForm tests  rendering active form 1`] = `
<WithStyles(Grid)
  alignItems="center"
  container={true}
  display="row"
  spacing={16}
>
  <WithStyles(Grid)
    item={true}
    style={
      Object {
        "flexGrow": 1,
      }
    }
  >
    <TextField
      disabled={false}
      error={true}
      fullWidth={true}
      helperText="This field is required"
      id=""
      inputRef={[Function]}
      label="Item name"
      onChange={[Function]}
      onKeyPress={[Function]}
      placeholder="Please type the item name"
      required={false}
      select={false}
      value=""
      variant="standard"
    />
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    sm={2}
    xs={12}
  >
    <WithStyles(Button)
      color="primary"
      disabled={true}
      fullWidth={true}
      id="add-items"
      onClick={[Function]}
      variant="contained"
    >
      Add
    </WithStyles(Button)>
  </WithStyles(Grid)>
</WithStyles(Grid)>
`;

exports[`FreeTextForm tests  rendering active form 2`] = `
<WithStyles(Grid)
  alignItems="center"
  container={true}
  display="row"
  spacing={16}
>
  <WithStyles(Grid)
    item={true}
    style={
      Object {
        "flexGrow": 1,
      }
    }
  >
    <TextField
      disabled={false}
      error={true}
      fullWidth={true}
      helperText="Limited to 5 characters"
      id=""
      inputRef={[Function]}
      label="Item name"
      onChange={[Function]}
      onKeyPress={[Function]}
      placeholder="Please type the item name"
      required={false}
      select={false}
      value="123456"
      variant="standard"
    />
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    sm={2}
    xs={12}
  >
    <WithStyles(Button)
      color="primary"
      disabled={true}
      fullWidth={true}
      id="add-items"
      onClick={[Function]}
      variant="contained"
    >
      Add
    </WithStyles(Button)>
  </WithStyles(Grid)>
</WithStyles(Grid)>
`;

exports[`FreeTextForm tests  rendering active form full mount 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction],
      "subscribe": [MockFunction],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MuiThemeProvider
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "graphs": Object {
              "color1": "#d72865",
              "color2": "#1e7d94",
              "color3": "#49075E",
              "color4": "#468fcc",
              "color5": "#f28620",
              "color6": "#333333",
              "color7": "#595959",
            },
            "hexToRGBA": [Function],
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {
              "MuiFormLabel": Object {
                "root": Object {
                  "overflow": "hidden",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                  "width": "100%",
                },
              },
            },
            "palette": Object {
              "accent": Object {
                "dark": "#2a557d",
                "light": "#54acff",
                "main": "#4085C6",
              },
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#790000",
                "light": "#ff0000",
                "main": "#c80000",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#3b1a59",
                "gradient": Object {
                  "diagonal": Object {
                    "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                  "horizontal": Object {
                    "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                },
                "light": "#962A8B",
                "main": "#51247A",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#333333",
                "light": "#f2f2f2",
                "main": "#595959",
              },
              "success": Object {
                "dark": "#005000",
                "light": "#00a700",
                "main": "#007200",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "dark": "#542400",
                "light": "#ff9a57",
                "main": "#bf5000",
              },
              "white": Object {
                "main": "#FFFFFF",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "status": Object {
              "danger": "#f44336",
              "warning": "#ff9800",
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.5,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.5,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 300,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 300,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 200,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 200,
              "fontWeightMedium": 400,
              "fontWeightRegular": 300,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 200,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 200,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 400,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "suppressDeprecationWarnings": true,
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 400,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": true,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
      >
        <MuiPickersUtilsProvider
          utils={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <FreeTextForm
            classes={
              Object {
                "remindToAdd": "",
              }
            }
            disabled={false}
            errorText="This field is required"
            locale={
              Object {
                "addButtonLabel": "Add",
                "inputFieldHint": "Please type the item name",
                "inputFieldLabel": "Item name",
              }
            }
            normalize={[Function]}
            onAdd={[MockFunction]}
            theme={Object {}}
          >
            <WithStyles(FreeTextFormClass)
              classes={
                Object {
                  "remindToAdd": "",
                }
              }
              disabled={false}
              errorText="This field is required"
              locale={
                Object {
                  "addButtonLabel": "Add",
                  "inputFieldHint": "Please type the item name",
                  "inputFieldLabel": "Item name",
                }
              }
              normalize={[Function]}
              onAdd={[MockFunction]}
              theme={Object {}}
            >
              <FreeTextFormClass
                classes={
                  Object {
                    "MUITextLabel": "FreeTextFormClass-MUITextLabel-1",
                    "remindToAdd": "FreeTextFormClass-remindToAdd-2",
                  }
                }
                disabled={false}
                errorText="This field is required"
                isValid={[Function]}
                locale={
                  Object {
                    "addButtonLabel": "Add",
                    "inputFieldHint": "Please type the item name",
                    "inputFieldLabel": "Item name",
                  }
                }
                maxInputLength={2000}
                normalize={[Function]}
                onAdd={[MockFunction]}
                remindToAdd={false}
                theme={Object {}}
              >
                <WithStyles(Grid)
                  alignItems="center"
                  container={true}
                  display="row"
                  spacing={16}
                >
                  <Grid
                    alignContent="stretch"
                    alignItems="center"
                    classes={
                      Object {
                        "align-content-xs-center": "MuiGrid-align-content-xs-center-15",
                        "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-17",
                        "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-16",
                        "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-19",
                        "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-18",
                        "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-14",
                        "align-items-xs-center": "MuiGrid-align-items-xs-center-11",
                        "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-13",
                        "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-12",
                        "container": "MuiGrid-container-3",
                        "direction-xs-column": "MuiGrid-direction-xs-column-6",
                        "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-7",
                        "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-8",
                        "grid-lg-1": "MuiGrid-grid-lg-1-74",
                        "grid-lg-10": "MuiGrid-grid-lg-10-83",
                        "grid-lg-11": "MuiGrid-grid-lg-11-84",
                        "grid-lg-12": "MuiGrid-grid-lg-12-85",
                        "grid-lg-2": "MuiGrid-grid-lg-2-75",
                        "grid-lg-3": "MuiGrid-grid-lg-3-76",
                        "grid-lg-4": "MuiGrid-grid-lg-4-77",
                        "grid-lg-5": "MuiGrid-grid-lg-5-78",
                        "grid-lg-6": "MuiGrid-grid-lg-6-79",
                        "grid-lg-7": "MuiGrid-grid-lg-7-80",
                        "grid-lg-8": "MuiGrid-grid-lg-8-81",
                        "grid-lg-9": "MuiGrid-grid-lg-9-82",
                        "grid-lg-auto": "MuiGrid-grid-lg-auto-72",
                        "grid-lg-true": "MuiGrid-grid-lg-true-73",
                        "grid-md-1": "MuiGrid-grid-md-1-60",
                        "grid-md-10": "MuiGrid-grid-md-10-69",
                        "grid-md-11": "MuiGrid-grid-md-11-70",
                        "grid-md-12": "MuiGrid-grid-md-12-71",
                        "grid-md-2": "MuiGrid-grid-md-2-61",
                        "grid-md-3": "MuiGrid-grid-md-3-62",
                        "grid-md-4": "MuiGrid-grid-md-4-63",
                        "grid-md-5": "MuiGrid-grid-md-5-64",
                        "grid-md-6": "MuiGrid-grid-md-6-65",
                        "grid-md-7": "MuiGrid-grid-md-7-66",
                        "grid-md-8": "MuiGrid-grid-md-8-67",
                        "grid-md-9": "MuiGrid-grid-md-9-68",
                        "grid-md-auto": "MuiGrid-grid-md-auto-58",
                        "grid-md-true": "MuiGrid-grid-md-true-59",
                        "grid-sm-1": "MuiGrid-grid-sm-1-46",
                        "grid-sm-10": "MuiGrid-grid-sm-10-55",
                        "grid-sm-11": "MuiGrid-grid-sm-11-56",
                        "grid-sm-12": "MuiGrid-grid-sm-12-57",
                        "grid-sm-2": "MuiGrid-grid-sm-2-47",
                        "grid-sm-3": "MuiGrid-grid-sm-3-48",
                        "grid-sm-4": "MuiGrid-grid-sm-4-49",
                        "grid-sm-5": "MuiGrid-grid-sm-5-50",
                        "grid-sm-6": "MuiGrid-grid-sm-6-51",
                        "grid-sm-7": "MuiGrid-grid-sm-7-52",
                        "grid-sm-8": "MuiGrid-grid-sm-8-53",
                        "grid-sm-9": "MuiGrid-grid-sm-9-54",
                        "grid-sm-auto": "MuiGrid-grid-sm-auto-44",
                        "grid-sm-true": "MuiGrid-grid-sm-true-45",
                        "grid-xl-1": "MuiGrid-grid-xl-1-88",
                        "grid-xl-10": "MuiGrid-grid-xl-10-97",
                        "grid-xl-11": "MuiGrid-grid-xl-11-98",
                        "grid-xl-12": "MuiGrid-grid-xl-12-99",
                        "grid-xl-2": "MuiGrid-grid-xl-2-89",
                        "grid-xl-3": "MuiGrid-grid-xl-3-90",
                        "grid-xl-4": "MuiGrid-grid-xl-4-91",
                        "grid-xl-5": "MuiGrid-grid-xl-5-92",
                        "grid-xl-6": "MuiGrid-grid-xl-6-93",
                        "grid-xl-7": "MuiGrid-grid-xl-7-94",
                        "grid-xl-8": "MuiGrid-grid-xl-8-95",
                        "grid-xl-9": "MuiGrid-grid-xl-9-96",
                        "grid-xl-auto": "MuiGrid-grid-xl-auto-86",
                        "grid-xl-true": "MuiGrid-grid-xl-true-87",
                        "grid-xs-1": "MuiGrid-grid-xs-1-32",
                        "grid-xs-10": "MuiGrid-grid-xs-10-41",
                        "grid-xs-11": "MuiGrid-grid-xs-11-42",
                        "grid-xs-12": "MuiGrid-grid-xs-12-43",
                        "grid-xs-2": "MuiGrid-grid-xs-2-33",
                        "grid-xs-3": "MuiGrid-grid-xs-3-34",
                        "grid-xs-4": "MuiGrid-grid-xs-4-35",
                        "grid-xs-5": "MuiGrid-grid-xs-5-36",
                        "grid-xs-6": "MuiGrid-grid-xs-6-37",
                        "grid-xs-7": "MuiGrid-grid-xs-7-38",
                        "grid-xs-8": "MuiGrid-grid-xs-8-39",
                        "grid-xs-9": "MuiGrid-grid-xs-9-40",
                        "grid-xs-auto": "MuiGrid-grid-xs-auto-30",
                        "grid-xs-true": "MuiGrid-grid-xs-true-31",
                        "item": "MuiGrid-item-4",
                        "justify-xs-center": "MuiGrid-justify-xs-center-20",
                        "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-21",
                        "justify-xs-space-around": "MuiGrid-justify-xs-space-around-23",
                        "justify-xs-space-between": "MuiGrid-justify-xs-space-between-22",
                        "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-24",
                        "spacing-xs-16": "MuiGrid-spacing-xs-16-26",
                        "spacing-xs-24": "MuiGrid-spacing-xs-24-27",
                        "spacing-xs-32": "MuiGrid-spacing-xs-32-28",
                        "spacing-xs-40": "MuiGrid-spacing-xs-40-29",
                        "spacing-xs-8": "MuiGrid-spacing-xs-8-25",
                        "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-9",
                        "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-10",
                        "zeroMinWidth": "MuiGrid-zeroMinWidth-5",
                      }
                    }
                    component="div"
                    container={true}
                    direction="row"
                    display="row"
                    item={false}
                    justify="flex-start"
                    lg={false}
                    md={false}
                    sm={false}
                    spacing={16}
                    wrap="wrap"
                    xl={false}
                    xs={false}
                    zeroMinWidth={false}
                  >
                    <div
                      className="MuiGrid-container-3 MuiGrid-spacing-xs-16-26 MuiGrid-align-items-xs-center-11"
                      display="row"
                    >
                      <WithStyles(Grid)
                        item={true}
                        style={
                          Object {
                            "flexGrow": 1,
                          }
                        }
                      >
                        <Grid
                          alignContent="stretch"
                          alignItems="stretch"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center-15",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-17",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-16",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-19",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-18",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-14",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center-11",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-13",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-12",
                              "container": "MuiGrid-container-3",
                              "direction-xs-column": "MuiGrid-direction-xs-column-6",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-7",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-8",
                              "grid-lg-1": "MuiGrid-grid-lg-1-74",
                              "grid-lg-10": "MuiGrid-grid-lg-10-83",
                              "grid-lg-11": "MuiGrid-grid-lg-11-84",
                              "grid-lg-12": "MuiGrid-grid-lg-12-85",
                              "grid-lg-2": "MuiGrid-grid-lg-2-75",
                              "grid-lg-3": "MuiGrid-grid-lg-3-76",
                              "grid-lg-4": "MuiGrid-grid-lg-4-77",
                              "grid-lg-5": "MuiGrid-grid-lg-5-78",
                              "grid-lg-6": "MuiGrid-grid-lg-6-79",
                              "grid-lg-7": "MuiGrid-grid-lg-7-80",
                              "grid-lg-8": "MuiGrid-grid-lg-8-81",
                              "grid-lg-9": "MuiGrid-grid-lg-9-82",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto-72",
                              "grid-lg-true": "MuiGrid-grid-lg-true-73",
                              "grid-md-1": "MuiGrid-grid-md-1-60",
                              "grid-md-10": "MuiGrid-grid-md-10-69",
                              "grid-md-11": "MuiGrid-grid-md-11-70",
                              "grid-md-12": "MuiGrid-grid-md-12-71",
                              "grid-md-2": "MuiGrid-grid-md-2-61",
                              "grid-md-3": "MuiGrid-grid-md-3-62",
                              "grid-md-4": "MuiGrid-grid-md-4-63",
                              "grid-md-5": "MuiGrid-grid-md-5-64",
                              "grid-md-6": "MuiGrid-grid-md-6-65",
                              "grid-md-7": "MuiGrid-grid-md-7-66",
                              "grid-md-8": "MuiGrid-grid-md-8-67",
                              "grid-md-9": "MuiGrid-grid-md-9-68",
                              "grid-md-auto": "MuiGrid-grid-md-auto-58",
                              "grid-md-true": "MuiGrid-grid-md-true-59",
                              "grid-sm-1": "MuiGrid-grid-sm-1-46",
                              "grid-sm-10": "MuiGrid-grid-sm-10-55",
                              "grid-sm-11": "MuiGrid-grid-sm-11-56",
                              "grid-sm-12": "MuiGrid-grid-sm-12-57",
                              "grid-sm-2": "MuiGrid-grid-sm-2-47",
                              "grid-sm-3": "MuiGrid-grid-sm-3-48",
                              "grid-sm-4": "MuiGrid-grid-sm-4-49",
                              "grid-sm-5": "MuiGrid-grid-sm-5-50",
                              "grid-sm-6": "MuiGrid-grid-sm-6-51",
                              "grid-sm-7": "MuiGrid-grid-sm-7-52",
                              "grid-sm-8": "MuiGrid-grid-sm-8-53",
                              "grid-sm-9": "MuiGrid-grid-sm-9-54",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto-44",
                              "grid-sm-true": "MuiGrid-grid-sm-true-45",
                              "grid-xl-1": "MuiGrid-grid-xl-1-88",
                              "grid-xl-10": "MuiGrid-grid-xl-10-97",
                              "grid-xl-11": "MuiGrid-grid-xl-11-98",
                              "grid-xl-12": "MuiGrid-grid-xl-12-99",
                              "grid-xl-2": "MuiGrid-grid-xl-2-89",
                              "grid-xl-3": "MuiGrid-grid-xl-3-90",
                              "grid-xl-4": "MuiGrid-grid-xl-4-91",
                              "grid-xl-5": "MuiGrid-grid-xl-5-92",
                              "grid-xl-6": "MuiGrid-grid-xl-6-93",
                              "grid-xl-7": "MuiGrid-grid-xl-7-94",
                              "grid-xl-8": "MuiGrid-grid-xl-8-95",
                              "grid-xl-9": "MuiGrid-grid-xl-9-96",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto-86",
                              "grid-xl-true": "MuiGrid-grid-xl-true-87",
                              "grid-xs-1": "MuiGrid-grid-xs-1-32",
                              "grid-xs-10": "MuiGrid-grid-xs-10-41",
                              "grid-xs-11": "MuiGrid-grid-xs-11-42",
                              "grid-xs-12": "MuiGrid-grid-xs-12-43",
                              "grid-xs-2": "MuiGrid-grid-xs-2-33",
                              "grid-xs-3": "MuiGrid-grid-xs-3-34",
                              "grid-xs-4": "MuiGrid-grid-xs-4-35",
                              "grid-xs-5": "MuiGrid-grid-xs-5-36",
                              "grid-xs-6": "MuiGrid-grid-xs-6-37",
                              "grid-xs-7": "MuiGrid-grid-xs-7-38",
                              "grid-xs-8": "MuiGrid-grid-xs-8-39",
                              "grid-xs-9": "MuiGrid-grid-xs-9-40",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto-30",
                              "grid-xs-true": "MuiGrid-grid-xs-true-31",
                              "item": "MuiGrid-item-4",
                              "justify-xs-center": "MuiGrid-justify-xs-center-20",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-21",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around-23",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between-22",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-24",
                              "spacing-xs-16": "MuiGrid-spacing-xs-16-26",
                              "spacing-xs-24": "MuiGrid-spacing-xs-24-27",
                              "spacing-xs-32": "MuiGrid-spacing-xs-32-28",
                              "spacing-xs-40": "MuiGrid-spacing-xs-40-29",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8-25",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-9",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-10",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth-5",
                            }
                          }
                          component="div"
                          container={false}
                          direction="row"
                          item={true}
                          justify="flex-start"
                          lg={false}
                          md={false}
                          sm={false}
                          spacing={0}
                          style={
                            Object {
                              "flexGrow": 1,
                            }
                          }
                          wrap="wrap"
                          xl={false}
                          xs={false}
                          zeroMinWidth={false}
                        >
                          <div
                            className="MuiGrid-item-4"
                            style={
                              Object {
                                "flexGrow": 1,
                              }
                            }
                          >
                            <TextField
                              disabled={false}
                              error={true}
                              fullWidth={true}
                              helperText="This field is required"
                              id=""
                              inputRef={[Function]}
                              label="Item name"
                              onChange={[Function]}
                              onKeyPress={[Function]}
                              placeholder="Please type the item name"
                              required={false}
                              select={false}
                              value=""
                              variant="standard"
                            >
                              <WithStyles(FormControl)
                                disabled={false}
                                error={true}
                                fullWidth={true}
                                onKeyPress={[Function]}
                                required={false}
                                variant="standard"
                              >
                                <FormControl
                                  classes={
                                    Object {
                                      "fullWidth": "MuiFormControl-fullWidth-103",
                                      "marginDense": "MuiFormControl-marginDense-102",
                                      "marginNormal": "MuiFormControl-marginNormal-101",
                                      "root": "MuiFormControl-root-100",
                                    }
                                  }
                                  component="div"
                                  disabled={false}
                                  error={true}
                                  fullWidth={true}
                                  margin="none"
                                  onKeyPress={[Function]}
                                  required={false}
                                  variant="standard"
                                >
                                  <div
                                    className="MuiFormControl-root-100 MuiFormControl-fullWidth-103"
                                    onKeyPress={[Function]}
                                  >
                                    <WithStyles(InputLabel)
                                      htmlFor=""
                                    >
                                      <InputLabel
                                        classes={
                                          Object {
                                            "animated": "MuiInputLabel-animated-108",
                                            "filled": "MuiInputLabel-filled-109",
                                            "formControl": "MuiInputLabel-formControl-105",
                                            "marginDense": "MuiInputLabel-marginDense-106",
                                            "outlined": "MuiInputLabel-outlined-110",
                                            "root": "MuiInputLabel-root-104",
                                            "shrink": "MuiInputLabel-shrink-107",
                                          }
                                        }
                                        disableAnimation={false}
                                        htmlFor=""
                                      >
                                        <WithStyles(FormLabel)
                                          className="MuiInputLabel-root-104 MuiInputLabel-formControl-105 MuiInputLabel-animated-108"
                                          data-shrink={false}
                                          htmlFor=""
                                        >
                                          <FormLabel
                                            className="MuiInputLabel-root-104 MuiInputLabel-formControl-105 MuiInputLabel-animated-108"
                                            classes={
                                              Object {
                                                "asterisk": "MuiFormLabel-asterisk-117",
                                                "disabled": "MuiFormLabel-disabled-113",
                                                "error": "MuiFormLabel-error-114",
                                                "filled": "MuiFormLabel-filled-115",
                                                "focused": "MuiFormLabel-focused-112",
                                                "required": "MuiFormLabel-required-116",
                                                "root": "MuiFormLabel-root-111",
                                              }
                                            }
                                            component="label"
                                            data-shrink={false}
                                            htmlFor=""
                                          >
                                            <label
                                              className="MuiFormLabel-root-111 MuiFormLabel-error-114 MuiInputLabel-root-104 MuiInputLabel-formControl-105 MuiInputLabel-animated-108"
                                              data-shrink={false}
                                              htmlFor=""
                                            >
                                              Item name
                                            </label>
                                          </FormLabel>
                                        </WithStyles(FormLabel)>
                                      </InputLabel>
                                    </WithStyles(InputLabel)>
                                    <WithStyles(Input)
                                      fullWidth={true}
                                      id=""
                                      inputRef={[Function]}
                                      onChange={[Function]}
                                      placeholder="Please type the item name"
                                      value=""
                                    >
                                      <Input
                                        classes={
                                          Object {
                                            "disabled": "MuiInput-disabled-121",
                                            "error": "MuiInput-error-123",
                                            "focused": "MuiInput-focused-120",
                                            "formControl": "MuiInput-formControl-119",
                                            "fullWidth": "MuiInput-fullWidth-125",
                                            "input": "MuiInput-input-126",
                                            "inputMarginDense": "MuiInput-inputMarginDense-127",
                                            "inputMultiline": "MuiInput-inputMultiline-128",
                                            "inputType": "MuiInput-inputType-129",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch-130",
                                            "multiline": "MuiInput-multiline-124",
                                            "root": "MuiInput-root-118",
                                            "underline": "MuiInput-underline-122",
                                          }
                                        }
                                        fullWidth={true}
                                        id=""
                                        inputRef={[Function]}
                                        onChange={[Function]}
                                        placeholder="Please type the item name"
                                        value=""
                                      >
                                        <WithStyles(InputBase)
                                          classes={
                                            Object {
                                              "disabled": "MuiInput-disabled-121",
                                              "error": "MuiInput-error-123",
                                              "focused": "MuiInput-focused-120",
                                              "formControl": "MuiInput-formControl-119",
                                              "fullWidth": "MuiInput-fullWidth-125",
                                              "input": "MuiInput-input-126",
                                              "inputMarginDense": "MuiInput-inputMarginDense-127",
                                              "inputMultiline": "MuiInput-inputMultiline-128",
                                              "inputType": "MuiInput-inputType-129",
                                              "inputTypeSearch": "MuiInput-inputTypeSearch-130",
                                              "multiline": "MuiInput-multiline-124",
                                              "root": "MuiInput-root-118 MuiInput-underline-122",
                                              "underline": null,
                                            }
                                          }
                                          fullWidth={true}
                                          id=""
                                          inputComponent="input"
                                          inputRef={[Function]}
                                          multiline={false}
                                          onChange={[Function]}
                                          placeholder="Please type the item name"
                                          type="text"
                                          value=""
                                        >
                                          <InputBase
                                            classes={
                                              Object {
                                                "adornedEnd": "MuiInputBase-adornedEnd-136",
                                                "adornedStart": "MuiInputBase-adornedStart-135",
                                                "disabled": "MuiInputBase-disabled-134 MuiInput-disabled-121",
                                                "error": "MuiInputBase-error-137 MuiInput-error-123",
                                                "focused": "MuiInputBase-focused-133 MuiInput-focused-120",
                                                "formControl": "MuiInputBase-formControl-132 MuiInput-formControl-119",
                                                "fullWidth": "MuiInputBase-fullWidth-140 MuiInput-fullWidth-125",
                                                "input": "MuiInputBase-input-141 MuiInput-input-126",
                                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-147",
                                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-146",
                                                "inputMarginDense": "MuiInputBase-inputMarginDense-142 MuiInput-inputMarginDense-127",
                                                "inputMultiline": "MuiInputBase-inputMultiline-143 MuiInput-inputMultiline-128",
                                                "inputType": "MuiInputBase-inputType-144 MuiInput-inputType-129",
                                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-145 MuiInput-inputTypeSearch-130",
                                                "marginDense": "MuiInputBase-marginDense-138",
                                                "multiline": "MuiInputBase-multiline-139 MuiInput-multiline-124",
                                                "root": "MuiInputBase-root-131 MuiInput-root-118 MuiInput-underline-122",
                                              }
                                            }
                                            fullWidth={true}
                                            id=""
                                            inputComponent="input"
                                            inputRef={[Function]}
                                            multiline={false}
                                            onChange={[Function]}
                                            placeholder="Please type the item name"
                                            type="text"
                                            value=""
                                          >
                                            <div
                                              className="MuiInputBase-root-131 MuiInput-root-118 MuiInput-underline-122 MuiInputBase-error-137 MuiInput-error-123 MuiInputBase-fullWidth-140 MuiInput-fullWidth-125 MuiInputBase-formControl-132 MuiInput-formControl-119"
                                              onClick={[Function]}
                                            >
                                              <input
                                                aria-invalid={true}
                                                className="MuiInputBase-input-141 MuiInput-input-126"
                                                disabled={false}
                                                id=""
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onFocus={[Function]}
                                                placeholder="Please type the item name"
                                                required={false}
                                                type="text"
                                                value=""
                                              />
                                            </div>
                                          </InputBase>
                                        </WithStyles(InputBase)>
                                      </Input>
                                    </WithStyles(Input)>
                                    <WithStyles(FormHelperText)>
                                      <FormHelperText
                                        classes={
                                          Object {
                                            "contained": "MuiFormHelperText-contained-152",
                                            "disabled": "MuiFormHelperText-disabled-150",
                                            "error": "MuiFormHelperText-error-149",
                                            "filled": "MuiFormHelperText-filled-154",
                                            "focused": "MuiFormHelperText-focused-153",
                                            "marginDense": "MuiFormHelperText-marginDense-151",
                                            "required": "MuiFormHelperText-required-155",
                                            "root": "MuiFormHelperText-root-148",
                                          }
                                        }
                                        component="p"
                                      >
                                        <p
                                          className="MuiFormHelperText-root-148 MuiFormHelperText-error-149"
                                        >
                                          This field is required
                                        </p>
                                      </FormHelperText>
                                    </WithStyles(FormHelperText)>
                                  </div>
                                </FormControl>
                              </WithStyles(FormControl)>
                            </TextField>
                          </div>
                        </Grid>
                      </WithStyles(Grid)>
                      <WithStyles(Grid)
                        item={true}
                        sm={2}
                        xs={12}
                      >
                        <Grid
                          alignContent="stretch"
                          alignItems="stretch"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center-15",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-17",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-16",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-19",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-18",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-14",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center-11",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-13",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-12",
                              "container": "MuiGrid-container-3",
                              "direction-xs-column": "MuiGrid-direction-xs-column-6",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-7",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-8",
                              "grid-lg-1": "MuiGrid-grid-lg-1-74",
                              "grid-lg-10": "MuiGrid-grid-lg-10-83",
                              "grid-lg-11": "MuiGrid-grid-lg-11-84",
                              "grid-lg-12": "MuiGrid-grid-lg-12-85",
                              "grid-lg-2": "MuiGrid-grid-lg-2-75",
                              "grid-lg-3": "MuiGrid-grid-lg-3-76",
                              "grid-lg-4": "MuiGrid-grid-lg-4-77",
                              "grid-lg-5": "MuiGrid-grid-lg-5-78",
                              "grid-lg-6": "MuiGrid-grid-lg-6-79",
                              "grid-lg-7": "MuiGrid-grid-lg-7-80",
                              "grid-lg-8": "MuiGrid-grid-lg-8-81",
                              "grid-lg-9": "MuiGrid-grid-lg-9-82",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto-72",
                              "grid-lg-true": "MuiGrid-grid-lg-true-73",
                              "grid-md-1": "MuiGrid-grid-md-1-60",
                              "grid-md-10": "MuiGrid-grid-md-10-69",
                              "grid-md-11": "MuiGrid-grid-md-11-70",
                              "grid-md-12": "MuiGrid-grid-md-12-71",
                              "grid-md-2": "MuiGrid-grid-md-2-61",
                              "grid-md-3": "MuiGrid-grid-md-3-62",
                              "grid-md-4": "MuiGrid-grid-md-4-63",
                              "grid-md-5": "MuiGrid-grid-md-5-64",
                              "grid-md-6": "MuiGrid-grid-md-6-65",
                              "grid-md-7": "MuiGrid-grid-md-7-66",
                              "grid-md-8": "MuiGrid-grid-md-8-67",
                              "grid-md-9": "MuiGrid-grid-md-9-68",
                              "grid-md-auto": "MuiGrid-grid-md-auto-58",
                              "grid-md-true": "MuiGrid-grid-md-true-59",
                              "grid-sm-1": "MuiGrid-grid-sm-1-46",
                              "grid-sm-10": "MuiGrid-grid-sm-10-55",
                              "grid-sm-11": "MuiGrid-grid-sm-11-56",
                              "grid-sm-12": "MuiGrid-grid-sm-12-57",
                              "grid-sm-2": "MuiGrid-grid-sm-2-47",
                              "grid-sm-3": "MuiGrid-grid-sm-3-48",
                              "grid-sm-4": "MuiGrid-grid-sm-4-49",
                              "grid-sm-5": "MuiGrid-grid-sm-5-50",
                              "grid-sm-6": "MuiGrid-grid-sm-6-51",
                              "grid-sm-7": "MuiGrid-grid-sm-7-52",
                              "grid-sm-8": "MuiGrid-grid-sm-8-53",
                              "grid-sm-9": "MuiGrid-grid-sm-9-54",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto-44",
                              "grid-sm-true": "MuiGrid-grid-sm-true-45",
                              "grid-xl-1": "MuiGrid-grid-xl-1-88",
                              "grid-xl-10": "MuiGrid-grid-xl-10-97",
                              "grid-xl-11": "MuiGrid-grid-xl-11-98",
                              "grid-xl-12": "MuiGrid-grid-xl-12-99",
                              "grid-xl-2": "MuiGrid-grid-xl-2-89",
                              "grid-xl-3": "MuiGrid-grid-xl-3-90",
                              "grid-xl-4": "MuiGrid-grid-xl-4-91",
                              "grid-xl-5": "MuiGrid-grid-xl-5-92",
                              "grid-xl-6": "MuiGrid-grid-xl-6-93",
                              "grid-xl-7": "MuiGrid-grid-xl-7-94",
                              "grid-xl-8": "MuiGrid-grid-xl-8-95",
                              "grid-xl-9": "MuiGrid-grid-xl-9-96",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto-86",
                              "grid-xl-true": "MuiGrid-grid-xl-true-87",
                              "grid-xs-1": "MuiGrid-grid-xs-1-32",
                              "grid-xs-10": "MuiGrid-grid-xs-10-41",
                              "grid-xs-11": "MuiGrid-grid-xs-11-42",
                              "grid-xs-12": "MuiGrid-grid-xs-12-43",
                              "grid-xs-2": "MuiGrid-grid-xs-2-33",
                              "grid-xs-3": "MuiGrid-grid-xs-3-34",
                              "grid-xs-4": "MuiGrid-grid-xs-4-35",
                              "grid-xs-5": "MuiGrid-grid-xs-5-36",
                              "grid-xs-6": "MuiGrid-grid-xs-6-37",
                              "grid-xs-7": "MuiGrid-grid-xs-7-38",
                              "grid-xs-8": "MuiGrid-grid-xs-8-39",
                              "grid-xs-9": "MuiGrid-grid-xs-9-40",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto-30",
                              "grid-xs-true": "MuiGrid-grid-xs-true-31",
                              "item": "MuiGrid-item-4",
                              "justify-xs-center": "MuiGrid-justify-xs-center-20",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-21",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around-23",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between-22",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-24",
                              "spacing-xs-16": "MuiGrid-spacing-xs-16-26",
                              "spacing-xs-24": "MuiGrid-spacing-xs-24-27",
                              "spacing-xs-32": "MuiGrid-spacing-xs-32-28",
                              "spacing-xs-40": "MuiGrid-spacing-xs-40-29",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8-25",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-9",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-10",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth-5",
                            }
                          }
                          component="div"
                          container={false}
                          direction="row"
                          item={true}
                          justify="flex-start"
                          lg={false}
                          md={false}
                          sm={2}
                          spacing={0}
                          wrap="wrap"
                          xl={false}
                          xs={12}
                          zeroMinWidth={false}
                        >
                          <div
                            className="MuiGrid-item-4 MuiGrid-grid-xs-12-43 MuiGrid-grid-sm-2-47"
                          >
                            <WithStyles(Button)
                              color="primary"
                              disabled={true}
                              fullWidth={true}
                              id="add-items"
                              onClick={[Function]}
                              variant="contained"
                            >
                              <Button
                                classes={
                                  Object {
                                    "colorInherit": "MuiButton-colorInherit-177",
                                    "contained": "MuiButton-contained-167",
                                    "containedPrimary": "MuiButton-containedPrimary-168",
                                    "containedSecondary": "MuiButton-containedSecondary-169",
                                    "disabled": "MuiButton-disabled-176",
                                    "extendedFab": "MuiButton-extendedFab-174",
                                    "fab": "MuiButton-fab-173",
                                    "flat": "MuiButton-flat-161",
                                    "flatPrimary": "MuiButton-flatPrimary-162",
                                    "flatSecondary": "MuiButton-flatSecondary-163",
                                    "focusVisible": "MuiButton-focusVisible-175",
                                    "fullWidth": "MuiButton-fullWidth-181",
                                    "label": "MuiButton-label-157",
                                    "mini": "MuiButton-mini-178",
                                    "outlined": "MuiButton-outlined-164",
                                    "outlinedPrimary": "MuiButton-outlinedPrimary-165",
                                    "outlinedSecondary": "MuiButton-outlinedSecondary-166",
                                    "raised": "MuiButton-raised-170",
                                    "raisedPrimary": "MuiButton-raisedPrimary-171",
                                    "raisedSecondary": "MuiButton-raisedSecondary-172",
                                    "root": "MuiButton-root-156",
                                    "sizeLarge": "MuiButton-sizeLarge-180",
                                    "sizeSmall": "MuiButton-sizeSmall-179",
                                    "text": "MuiButton-text-158",
                                    "textPrimary": "MuiButton-textPrimary-159",
                                    "textSecondary": "MuiButton-textSecondary-160",
                                  }
                                }
                                color="primary"
                                component="button"
                                disableFocusRipple={false}
                                disabled={true}
                                fullWidth={true}
                                id="add-items"
                                mini={false}
                                onClick={[Function]}
                                size="medium"
                                type="button"
                                variant="contained"
                              >
                                <WithStyles(ButtonBase)
                                  className="MuiButton-root-156 MuiButton-contained-167 MuiButton-containedPrimary-168 MuiButton-raised-170 MuiButton-raisedPrimary-171 MuiButton-disabled-176 MuiButton-fullWidth-181"
                                  component="button"
                                  disabled={true}
                                  focusRipple={true}
                                  focusVisibleClassName="MuiButton-focusVisible-175"
                                  id="add-items"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <ButtonBase
                                    centerRipple={false}
                                    className="MuiButton-root-156 MuiButton-contained-167 MuiButton-containedPrimary-168 MuiButton-raised-170 MuiButton-raisedPrimary-171 MuiButton-disabled-176 MuiButton-fullWidth-181"
                                    classes={
                                      Object {
                                        "disabled": "MuiButtonBase-disabled-183",
                                        "focusVisible": "MuiButtonBase-focusVisible-184",
                                        "root": "MuiButtonBase-root-182",
                                      }
                                    }
                                    component="button"
                                    disableRipple={false}
                                    disableTouchRipple={false}
                                    disabled={true}
                                    focusRipple={true}
                                    focusVisibleClassName="MuiButton-focusVisible-175"
                                    id="add-items"
                                    onClick={[Function]}
                                    tabIndex="0"
                                    type="button"
                                  >
                                    <button
                                      className="MuiButtonBase-root-182 MuiButtonBase-disabled-183 MuiButton-root-156 MuiButton-contained-167 MuiButton-containedPrimary-168 MuiButton-raised-170 MuiButton-raisedPrimary-171 MuiButton-disabled-176 MuiButton-fullWidth-181"
                                      disabled={true}
                                      id="add-items"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex="-1"
                                      type="button"
                                    >
                                      <span
                                        className="MuiButton-label-157"
                                      >
                                        Add
                                      </span>
                                    </button>
                                  </ButtonBase>
                                </WithStyles(ButtonBase)>
                              </Button>
                            </WithStyles(Button)>
                          </div>
                        </Grid>
                      </WithStyles(Grid)>
                    </div>
                  </Grid>
                </WithStyles(Grid)>
              </FreeTextFormClass>
            </WithStyles(FreeTextFormClass)>
          </FreeTextForm>
        </MuiPickersUtilsProvider>
      </MuiThemeProvider>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`FreeTextForm tests  rendering disabled form 1`] = `
<WithStyles(Grid)
  alignItems="center"
  container={true}
  display="row"
  spacing={16}
>
  <WithStyles(Grid)
    item={true}
    style={
      Object {
        "flexGrow": 1,
      }
    }
  >
    <TextField
      disabled={true}
      error={true}
      fullWidth={true}
      helperText="This field is required"
      id=""
      inputRef={[Function]}
      label="Item name"
      onChange={[Function]}
      onKeyPress={[Function]}
      placeholder="Please type the item name"
      required={false}
      select={false}
      value=""
      variant="standard"
    />
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    sm={2}
    xs={12}
  >
    <WithStyles(Button)
      color="primary"
      disabled={true}
      fullWidth={true}
      id="add-items"
      onClick={[Function]}
      variant="contained"
    >
      Add
    </WithStyles(Button)>
  </WithStyles(Grid)>
</WithStyles(Grid)>
`;

exports[`FreeTextForm tests  rendering reminder to add input 1`] = `
<WithStyles(Grid)
  alignItems="center"
  container={true}
  display="row"
  spacing={16}
>
  <WithStyles(Grid)
    item={true}
    style={
      Object {
        "flexGrow": 1,
      }
    }
  >
    <TextField
      disabled={false}
      error={true}
      fullWidth={true}
      helperText="This field is required"
      id=""
      inputRef={[Function]}
      onChange={[Function]}
      onKeyPress={[Function]}
      required={false}
      select={false}
      value="one"
      variant="standard"
    />
    <WithStyles(Typography)
      className=""
      variant="caption"
    >
      reminder text
    </WithStyles(Typography)>
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    sm={2}
    xs={12}
  >
    <WithStyles(Button)
      color="primary"
      disabled={true}
      fullWidth={true}
      id="add-items"
      onClick={[Function]}
      variant="contained"
    >
      Add
    </WithStyles(Button)>
  </WithStyles(Grid)>
</WithStyles(Grid)>
`;

exports[`FreeTextForm tests  should display error about input length 1`] = `
<WithStyles(Grid)
  alignItems="center"
  container={true}
  display="row"
  spacing={16}
>
  <WithStyles(Grid)
    item={true}
    style={
      Object {
        "flexGrow": 1,
      }
    }
  >
    <TextField
      disabled={false}
      error={true}
      fullWidth={true}
      helperText="This field is required - Limited to 3 characters"
      id=""
      inputRef={[Function]}
      label="Item name"
      onChange={[Function]}
      onKeyPress={[Function]}
      placeholder="Please type the item name"
      required={false}
      select={false}
      value="test"
      variant="standard"
    />
  </WithStyles(Grid)>
  <WithStyles(Grid)
    item={true}
    sm={2}
    xs={12}
  >
    <WithStyles(Button)
      color="primary"
      disabled={true}
      fullWidth={true}
      id="add-items"
      onClick={[Function]}
      variant="contained"
    >
      Add
    </WithStyles(Button)>
  </WithStyles(Grid)>
</WithStyles(Grid)>
`;
