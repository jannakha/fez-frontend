// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dashboard test Full mount for styles render 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction],
      "subscribe": [MockFunction],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MuiThemeProvider
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "graphs": Object {
              "color1": "#d72865",
              "color2": "#1e7d94",
              "color3": "#49075E",
              "color4": "#468fcc",
              "color5": "#f28620",
              "color6": "#333333",
              "color7": "#595959",
            },
            "hexToRGBA": [Function],
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {
              "MuiFormLabel": Object {
                "root": Object {
                  "overflow": "hidden",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                  "width": "100%",
                },
              },
            },
            "palette": Object {
              "accent": Object {
                "dark": "#2a557d",
                "light": "#54acff",
                "main": "#4085C6",
              },
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#790000",
                "light": "#ff0000",
                "main": "#c80000",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#3b1a59",
                "gradient": Object {
                  "diagonal": Object {
                    "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                  "horizontal": Object {
                    "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                },
                "light": "#962A8B",
                "main": "#51247A",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#333333",
                "light": "#f2f2f2",
                "main": "#595959",
              },
              "success": Object {
                "dark": "#005000",
                "light": "#00a700",
                "main": "#007200",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "dark": "#542400",
                "light": "#ff9a57",
                "main": "#bf5000",
              },
              "white": Object {
                "main": "#FFFFFF",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "status": Object {
              "danger": "#f44336",
              "warning": "#ff9800",
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.5,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.5,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 300,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 300,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 200,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 200,
              "fontWeightMedium": 400,
              "fontWeightRegular": 300,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 200,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 200,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 400,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "suppressDeprecationWarnings": true,
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 400,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": true,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
      >
        <MuiPickersUtilsProvider
          utils={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <Dashboard
            account={
              Object {
                "barcode": "240675201000000",
                "blocked": false,
                "canMasquerade": false,
                "class": Array [
                  "Campus-MATERHOSP",
                ],
                "classes": Array [],
                "expiryDate": "31-12-19",
                "firstName": "J",
                "groups": Array [
                  "CN=Sci Faculty",
                ],
                "hasSession": true,
                "homeLib": "St Lucia",
                "id": "uqresearcher",
                "lastName": "Researcher",
                "mail": "j.Researcher@uq.edu.au",
                "name": "J Researcher",
                "tokenBased": false,
                "type": 3,
              }
            }
            accountAuthorDetailsLoading={false}
            actions={
              Object {
                "countPossiblyYourPublications": [MockFunction] {
                  "calls": Array [
                    Array [
                      "uqresearcher",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "loadAuthorPublicationsStats": [MockFunction] {
                  "calls": Array [
                    Array [
                      "uqresearcher",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "searchAuthorPublications": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {},
                      "incomplete",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              }
            }
            classes={Object {}}
            hidePossiblyYourPublicationsLure={false}
            history={Object {}}
            incomplete={
              Object {
                "loadingPublicationsList": false,
                "publicationsList": Array [],
                "publicationsListFacets": Object {},
                "publicationsListPagingData": Object {},
              }
            }
            loadingPublicationsByYear={false}
            loadingPublicationsStats={false}
            possiblyYourPublicationsCountLoading={false}
            publicationTotalCount={null}
            theme={Object {}}
          >
            <WithStyles(DashboardClass)
              account={
                Object {
                  "barcode": "240675201000000",
                  "blocked": false,
                  "canMasquerade": false,
                  "class": Array [
                    "Campus-MATERHOSP",
                  ],
                  "classes": Array [],
                  "expiryDate": "31-12-19",
                  "firstName": "J",
                  "groups": Array [
                    "CN=Sci Faculty",
                  ],
                  "hasSession": true,
                  "homeLib": "St Lucia",
                  "id": "uqresearcher",
                  "lastName": "Researcher",
                  "mail": "j.Researcher@uq.edu.au",
                  "name": "J Researcher",
                  "tokenBased": false,
                  "type": 3,
                }
              }
              accountAuthorDetailsLoading={false}
              actions={
                Object {
                  "countPossiblyYourPublications": [MockFunction] {
                    "calls": Array [
                      Array [
                        "uqresearcher",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "loadAuthorPublicationsStats": [MockFunction] {
                    "calls": Array [
                      Array [
                        "uqresearcher",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  "searchAuthorPublications": [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {},
                        "incomplete",
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                }
              }
              classes={Object {}}
              hidePossiblyYourPublicationsLure={false}
              history={Object {}}
              incomplete={
                Object {
                  "loadingPublicationsList": false,
                  "publicationsList": Array [],
                  "publicationsListFacets": Object {},
                  "publicationsListPagingData": Object {},
                }
              }
              loadingPublicationsByYear={false}
              loadingPublicationsStats={false}
              possiblyYourPublicationsCountLoading={false}
              publicationTotalCount={null}
              theme={Object {}}
            >
              <DashboardClass
                account={
                  Object {
                    "barcode": "240675201000000",
                    "blocked": false,
                    "canMasquerade": false,
                    "class": Array [
                      "Campus-MATERHOSP",
                    ],
                    "classes": Array [],
                    "expiryDate": "31-12-19",
                    "firstName": "J",
                    "groups": Array [
                      "CN=Sci Faculty",
                    ],
                    "hasSession": true,
                    "homeLib": "St Lucia",
                    "id": "uqresearcher",
                    "lastName": "Researcher",
                    "mail": "j.Researcher@uq.edu.au",
                    "name": "J Researcher",
                    "tokenBased": false,
                    "type": 3,
                  }
                }
                accountAuthorDetailsLoading={false}
                actions={
                  Object {
                    "countPossiblyYourPublications": [MockFunction] {
                      "calls": Array [
                        Array [
                          "uqresearcher",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "loadAuthorPublicationsStats": [MockFunction] {
                      "calls": Array [
                        Array [
                          "uqresearcher",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    "searchAuthorPublications": [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {},
                          "incomplete",
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                  }
                }
                classes={
                  Object {
                    "tab": "DashboardClass-tab-101",
                    "tabIndicator": "DashboardClass-tabIndicator-102",
                    "tabs": "DashboardClass-tabs-100",
                  }
                }
                hidePossiblyYourPublicationsLure={false}
                history={Object {}}
                incomplete={
                  Object {
                    "loadingPublicationsList": false,
                    "publicationsList": Array [],
                    "publicationsListFacets": Object {},
                    "publicationsListPagingData": Object {},
                  }
                }
                loadingPublicationsByYear={false}
                loadingPublicationsStats={false}
                possiblyYourPublicationsCountLoading={false}
                publicationTotalCount={null}
                theme={Object {}}
              >
                <StandardPage>
                  <WithStyles(Page)>
                    <Page
                      classes={
                        Object {
                          "layoutCard": "Page-layoutCard-1",
                          "layoutTitle": "Page-layoutTitle-2",
                        }
                      }
                      theme={
                        Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "graphs": Object {
                            "color1": "#d72865",
                            "color2": "#1e7d94",
                            "color3": "#49075E",
                            "color4": "#468fcc",
                            "color5": "#f28620",
                            "color6": "#333333",
                            "color7": "#595959",
                          },
                          "hexToRGBA": [Function],
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {
                            "MuiFormLabel": Object {
                              "root": Object {
                                "overflow": "hidden",
                                "textOverflow": "ellipsis",
                                "whiteSpace": "nowrap",
                                "width": "100%",
                              },
                            },
                          },
                          "palette": Object {
                            "accent": Object {
                              "dark": "#2a557d",
                              "light": "#54acff",
                              "main": "#4085C6",
                            },
                            "action": Object {
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "hover": "rgba(0, 0, 0, 0.08)",
                              "hoverOpacity": 0.08,
                              "selected": "rgba(0, 0, 0, 0.14)",
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#790000",
                              "light": "#ff0000",
                              "main": "#c80000",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#3b1a59",
                              "gradient": Object {
                                "diagonal": Object {
                                  "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                                  "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                                },
                                "horizontal": Object {
                                  "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                                  "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                                },
                              },
                              "light": "#962A8B",
                              "main": "#51247A",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#333333",
                              "light": "#f2f2f2",
                              "main": "#595959",
                            },
                            "success": Object {
                              "dark": "#005000",
                              "light": "#00a700",
                              "main": "#007200",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                            "warning": Object {
                              "dark": "#542400",
                              "light": "#ff9a57",
                              "main": "#bf5000",
                            },
                            "white": Object {
                              "main": "#FFFFFF",
                            },
                          },
                          "props": Object {},
                          "shadows": Array [
                            "none",
                            "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                            "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                            "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                            "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                            "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                            "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                            "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                            "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                            "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                            "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                            "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                            "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                            "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                            "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                            "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                            "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                            "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                            "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                            "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                            "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                            "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                            "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                            "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                            "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": Object {
                            "unit": 8,
                          },
                          "status": Object {
                            "danger": "#f44336",
                            "warning": "#ff9800",
                          },
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 300,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body1Next": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 300,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 300,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.5,
                            },
                            "body2Next": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 300,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.5,
                            },
                            "button": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.5,
                              "textTransform": "uppercase",
                            },
                            "buttonNext": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.5,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "captionNext": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "display1": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 300,
                              "lineHeight": "1.20588em",
                            },
                            "display2": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.8125rem",
                              "fontWeight": 300,
                              "lineHeight": "1.13333em",
                              "marginLeft": "-.02em",
                            },
                            "display3": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.5rem",
                              "fontWeight": 300,
                              "letterSpacing": "-.02em",
                              "lineHeight": "1.30357em",
                              "marginLeft": "-.02em",
                            },
                            "display4": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "7rem",
                              "fontWeight": 200,
                              "letterSpacing": "-.04em",
                              "lineHeight": "1.14286em",
                              "marginLeft": "-.04em",
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightLight": 200,
                            "fontWeightMedium": 400,
                            "fontWeightRegular": 300,
                            "h1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 200,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1,
                            },
                            "h2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 200,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1,
                            },
                            "h3": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 300,
                              "letterSpacing": "0em",
                              "lineHeight": 1.04,
                            },
                            "h4": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 300,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.17,
                            },
                            "h5": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 300,
                              "letterSpacing": "0em",
                              "lineHeight": 1.33,
                            },
                            "h6": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "headline": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 300,
                              "lineHeight": "1.35417em",
                            },
                            "overline": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subheading": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 300,
                              "lineHeight": "1.5em",
                            },
                            "subtitle1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 300,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                            "suppressDeprecationWarnings": true,
                            "title": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.3125rem",
                              "fontWeight": 400,
                              "lineHeight": "1.16667em",
                            },
                            "useNextVariants": true,
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "tooltip": 1500,
                          },
                        }
                      }
                    >
                      <WithStyles(Grid)
                        className="StandardPage"
                        container={true}
                      >
                        <Grid
                          alignContent="stretch"
                          alignItems="stretch"
                          className="StandardPage"
                          classes={
                            Object {
                              "align-content-xs-center": "MuiGrid-align-content-xs-center-15",
                              "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-17",
                              "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-16",
                              "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-19",
                              "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-18",
                              "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-14",
                              "align-items-xs-center": "MuiGrid-align-items-xs-center-11",
                              "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-13",
                              "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-12",
                              "container": "MuiGrid-container-3",
                              "direction-xs-column": "MuiGrid-direction-xs-column-6",
                              "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-7",
                              "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-8",
                              "grid-lg-1": "MuiGrid-grid-lg-1-74",
                              "grid-lg-10": "MuiGrid-grid-lg-10-83",
                              "grid-lg-11": "MuiGrid-grid-lg-11-84",
                              "grid-lg-12": "MuiGrid-grid-lg-12-85",
                              "grid-lg-2": "MuiGrid-grid-lg-2-75",
                              "grid-lg-3": "MuiGrid-grid-lg-3-76",
                              "grid-lg-4": "MuiGrid-grid-lg-4-77",
                              "grid-lg-5": "MuiGrid-grid-lg-5-78",
                              "grid-lg-6": "MuiGrid-grid-lg-6-79",
                              "grid-lg-7": "MuiGrid-grid-lg-7-80",
                              "grid-lg-8": "MuiGrid-grid-lg-8-81",
                              "grid-lg-9": "MuiGrid-grid-lg-9-82",
                              "grid-lg-auto": "MuiGrid-grid-lg-auto-72",
                              "grid-lg-true": "MuiGrid-grid-lg-true-73",
                              "grid-md-1": "MuiGrid-grid-md-1-60",
                              "grid-md-10": "MuiGrid-grid-md-10-69",
                              "grid-md-11": "MuiGrid-grid-md-11-70",
                              "grid-md-12": "MuiGrid-grid-md-12-71",
                              "grid-md-2": "MuiGrid-grid-md-2-61",
                              "grid-md-3": "MuiGrid-grid-md-3-62",
                              "grid-md-4": "MuiGrid-grid-md-4-63",
                              "grid-md-5": "MuiGrid-grid-md-5-64",
                              "grid-md-6": "MuiGrid-grid-md-6-65",
                              "grid-md-7": "MuiGrid-grid-md-7-66",
                              "grid-md-8": "MuiGrid-grid-md-8-67",
                              "grid-md-9": "MuiGrid-grid-md-9-68",
                              "grid-md-auto": "MuiGrid-grid-md-auto-58",
                              "grid-md-true": "MuiGrid-grid-md-true-59",
                              "grid-sm-1": "MuiGrid-grid-sm-1-46",
                              "grid-sm-10": "MuiGrid-grid-sm-10-55",
                              "grid-sm-11": "MuiGrid-grid-sm-11-56",
                              "grid-sm-12": "MuiGrid-grid-sm-12-57",
                              "grid-sm-2": "MuiGrid-grid-sm-2-47",
                              "grid-sm-3": "MuiGrid-grid-sm-3-48",
                              "grid-sm-4": "MuiGrid-grid-sm-4-49",
                              "grid-sm-5": "MuiGrid-grid-sm-5-50",
                              "grid-sm-6": "MuiGrid-grid-sm-6-51",
                              "grid-sm-7": "MuiGrid-grid-sm-7-52",
                              "grid-sm-8": "MuiGrid-grid-sm-8-53",
                              "grid-sm-9": "MuiGrid-grid-sm-9-54",
                              "grid-sm-auto": "MuiGrid-grid-sm-auto-44",
                              "grid-sm-true": "MuiGrid-grid-sm-true-45",
                              "grid-xl-1": "MuiGrid-grid-xl-1-88",
                              "grid-xl-10": "MuiGrid-grid-xl-10-97",
                              "grid-xl-11": "MuiGrid-grid-xl-11-98",
                              "grid-xl-12": "MuiGrid-grid-xl-12-99",
                              "grid-xl-2": "MuiGrid-grid-xl-2-89",
                              "grid-xl-3": "MuiGrid-grid-xl-3-90",
                              "grid-xl-4": "MuiGrid-grid-xl-4-91",
                              "grid-xl-5": "MuiGrid-grid-xl-5-92",
                              "grid-xl-6": "MuiGrid-grid-xl-6-93",
                              "grid-xl-7": "MuiGrid-grid-xl-7-94",
                              "grid-xl-8": "MuiGrid-grid-xl-8-95",
                              "grid-xl-9": "MuiGrid-grid-xl-9-96",
                              "grid-xl-auto": "MuiGrid-grid-xl-auto-86",
                              "grid-xl-true": "MuiGrid-grid-xl-true-87",
                              "grid-xs-1": "MuiGrid-grid-xs-1-32",
                              "grid-xs-10": "MuiGrid-grid-xs-10-41",
                              "grid-xs-11": "MuiGrid-grid-xs-11-42",
                              "grid-xs-12": "MuiGrid-grid-xs-12-43",
                              "grid-xs-2": "MuiGrid-grid-xs-2-33",
                              "grid-xs-3": "MuiGrid-grid-xs-3-34",
                              "grid-xs-4": "MuiGrid-grid-xs-4-35",
                              "grid-xs-5": "MuiGrid-grid-xs-5-36",
                              "grid-xs-6": "MuiGrid-grid-xs-6-37",
                              "grid-xs-7": "MuiGrid-grid-xs-7-38",
                              "grid-xs-8": "MuiGrid-grid-xs-8-39",
                              "grid-xs-9": "MuiGrid-grid-xs-9-40",
                              "grid-xs-auto": "MuiGrid-grid-xs-auto-30",
                              "grid-xs-true": "MuiGrid-grid-xs-true-31",
                              "item": "MuiGrid-item-4",
                              "justify-xs-center": "MuiGrid-justify-xs-center-20",
                              "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-21",
                              "justify-xs-space-around": "MuiGrid-justify-xs-space-around-23",
                              "justify-xs-space-between": "MuiGrid-justify-xs-space-between-22",
                              "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-24",
                              "spacing-xs-16": "MuiGrid-spacing-xs-16-26",
                              "spacing-xs-24": "MuiGrid-spacing-xs-24-27",
                              "spacing-xs-32": "MuiGrid-spacing-xs-32-28",
                              "spacing-xs-40": "MuiGrid-spacing-xs-40-29",
                              "spacing-xs-8": "MuiGrid-spacing-xs-8-25",
                              "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-9",
                              "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-10",
                              "zeroMinWidth": "MuiGrid-zeroMinWidth-5",
                            }
                          }
                          component="div"
                          container={true}
                          direction="row"
                          item={false}
                          justify="flex-start"
                          lg={false}
                          md={false}
                          sm={false}
                          spacing={0}
                          wrap="wrap"
                          xl={false}
                          xs={false}
                          zeroMinWidth={false}
                        >
                          <div
                            className="MuiGrid-container-3 StandardPage"
                          >
                            <WithStyles(Grid)
                              className="Page-layoutCard-1"
                              item={true}
                            >
                              <Grid
                                alignContent="stretch"
                                alignItems="stretch"
                                className="Page-layoutCard-1"
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center-15",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-17",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-16",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-19",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-18",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-14",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center-11",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-13",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-12",
                                    "container": "MuiGrid-container-3",
                                    "direction-xs-column": "MuiGrid-direction-xs-column-6",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-7",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-8",
                                    "grid-lg-1": "MuiGrid-grid-lg-1-74",
                                    "grid-lg-10": "MuiGrid-grid-lg-10-83",
                                    "grid-lg-11": "MuiGrid-grid-lg-11-84",
                                    "grid-lg-12": "MuiGrid-grid-lg-12-85",
                                    "grid-lg-2": "MuiGrid-grid-lg-2-75",
                                    "grid-lg-3": "MuiGrid-grid-lg-3-76",
                                    "grid-lg-4": "MuiGrid-grid-lg-4-77",
                                    "grid-lg-5": "MuiGrid-grid-lg-5-78",
                                    "grid-lg-6": "MuiGrid-grid-lg-6-79",
                                    "grid-lg-7": "MuiGrid-grid-lg-7-80",
                                    "grid-lg-8": "MuiGrid-grid-lg-8-81",
                                    "grid-lg-9": "MuiGrid-grid-lg-9-82",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto-72",
                                    "grid-lg-true": "MuiGrid-grid-lg-true-73",
                                    "grid-md-1": "MuiGrid-grid-md-1-60",
                                    "grid-md-10": "MuiGrid-grid-md-10-69",
                                    "grid-md-11": "MuiGrid-grid-md-11-70",
                                    "grid-md-12": "MuiGrid-grid-md-12-71",
                                    "grid-md-2": "MuiGrid-grid-md-2-61",
                                    "grid-md-3": "MuiGrid-grid-md-3-62",
                                    "grid-md-4": "MuiGrid-grid-md-4-63",
                                    "grid-md-5": "MuiGrid-grid-md-5-64",
                                    "grid-md-6": "MuiGrid-grid-md-6-65",
                                    "grid-md-7": "MuiGrid-grid-md-7-66",
                                    "grid-md-8": "MuiGrid-grid-md-8-67",
                                    "grid-md-9": "MuiGrid-grid-md-9-68",
                                    "grid-md-auto": "MuiGrid-grid-md-auto-58",
                                    "grid-md-true": "MuiGrid-grid-md-true-59",
                                    "grid-sm-1": "MuiGrid-grid-sm-1-46",
                                    "grid-sm-10": "MuiGrid-grid-sm-10-55",
                                    "grid-sm-11": "MuiGrid-grid-sm-11-56",
                                    "grid-sm-12": "MuiGrid-grid-sm-12-57",
                                    "grid-sm-2": "MuiGrid-grid-sm-2-47",
                                    "grid-sm-3": "MuiGrid-grid-sm-3-48",
                                    "grid-sm-4": "MuiGrid-grid-sm-4-49",
                                    "grid-sm-5": "MuiGrid-grid-sm-5-50",
                                    "grid-sm-6": "MuiGrid-grid-sm-6-51",
                                    "grid-sm-7": "MuiGrid-grid-sm-7-52",
                                    "grid-sm-8": "MuiGrid-grid-sm-8-53",
                                    "grid-sm-9": "MuiGrid-grid-sm-9-54",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto-44",
                                    "grid-sm-true": "MuiGrid-grid-sm-true-45",
                                    "grid-xl-1": "MuiGrid-grid-xl-1-88",
                                    "grid-xl-10": "MuiGrid-grid-xl-10-97",
                                    "grid-xl-11": "MuiGrid-grid-xl-11-98",
                                    "grid-xl-12": "MuiGrid-grid-xl-12-99",
                                    "grid-xl-2": "MuiGrid-grid-xl-2-89",
                                    "grid-xl-3": "MuiGrid-grid-xl-3-90",
                                    "grid-xl-4": "MuiGrid-grid-xl-4-91",
                                    "grid-xl-5": "MuiGrid-grid-xl-5-92",
                                    "grid-xl-6": "MuiGrid-grid-xl-6-93",
                                    "grid-xl-7": "MuiGrid-grid-xl-7-94",
                                    "grid-xl-8": "MuiGrid-grid-xl-8-95",
                                    "grid-xl-9": "MuiGrid-grid-xl-9-96",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto-86",
                                    "grid-xl-true": "MuiGrid-grid-xl-true-87",
                                    "grid-xs-1": "MuiGrid-grid-xs-1-32",
                                    "grid-xs-10": "MuiGrid-grid-xs-10-41",
                                    "grid-xs-11": "MuiGrid-grid-xs-11-42",
                                    "grid-xs-12": "MuiGrid-grid-xs-12-43",
                                    "grid-xs-2": "MuiGrid-grid-xs-2-33",
                                    "grid-xs-3": "MuiGrid-grid-xs-3-34",
                                    "grid-xs-4": "MuiGrid-grid-xs-4-35",
                                    "grid-xs-5": "MuiGrid-grid-xs-5-36",
                                    "grid-xs-6": "MuiGrid-grid-xs-6-37",
                                    "grid-xs-7": "MuiGrid-grid-xs-7-38",
                                    "grid-xs-8": "MuiGrid-grid-xs-8-39",
                                    "grid-xs-9": "MuiGrid-grid-xs-9-40",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto-30",
                                    "grid-xs-true": "MuiGrid-grid-xs-true-31",
                                    "item": "MuiGrid-item-4",
                                    "justify-xs-center": "MuiGrid-justify-xs-center-20",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-21",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around-23",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between-22",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-24",
                                    "spacing-xs-16": "MuiGrid-spacing-xs-16-26",
                                    "spacing-xs-24": "MuiGrid-spacing-xs-24-27",
                                    "spacing-xs-32": "MuiGrid-spacing-xs-32-28",
                                    "spacing-xs-40": "MuiGrid-spacing-xs-40-29",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8-25",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-9",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-10",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth-5",
                                  }
                                }
                                component="div"
                                container={false}
                                direction="row"
                                item={true}
                                justify="flex-start"
                                lg={false}
                                md={false}
                                sm={false}
                                spacing={0}
                                wrap="wrap"
                                xl={false}
                                xs={false}
                                zeroMinWidth={false}
                              >
                                <div
                                  className="MuiGrid-item-4 Page-layoutCard-1"
                                >
                                  <WithStyles(Grid)
                                    container={true}
                                    spacing={24}
                                  >
                                    <Grid
                                      alignContent="stretch"
                                      alignItems="stretch"
                                      classes={
                                        Object {
                                          "align-content-xs-center": "MuiGrid-align-content-xs-center-15",
                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-17",
                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-16",
                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-19",
                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-18",
                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-14",
                                          "align-items-xs-center": "MuiGrid-align-items-xs-center-11",
                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-13",
                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-12",
                                          "container": "MuiGrid-container-3",
                                          "direction-xs-column": "MuiGrid-direction-xs-column-6",
                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-7",
                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-8",
                                          "grid-lg-1": "MuiGrid-grid-lg-1-74",
                                          "grid-lg-10": "MuiGrid-grid-lg-10-83",
                                          "grid-lg-11": "MuiGrid-grid-lg-11-84",
                                          "grid-lg-12": "MuiGrid-grid-lg-12-85",
                                          "grid-lg-2": "MuiGrid-grid-lg-2-75",
                                          "grid-lg-3": "MuiGrid-grid-lg-3-76",
                                          "grid-lg-4": "MuiGrid-grid-lg-4-77",
                                          "grid-lg-5": "MuiGrid-grid-lg-5-78",
                                          "grid-lg-6": "MuiGrid-grid-lg-6-79",
                                          "grid-lg-7": "MuiGrid-grid-lg-7-80",
                                          "grid-lg-8": "MuiGrid-grid-lg-8-81",
                                          "grid-lg-9": "MuiGrid-grid-lg-9-82",
                                          "grid-lg-auto": "MuiGrid-grid-lg-auto-72",
                                          "grid-lg-true": "MuiGrid-grid-lg-true-73",
                                          "grid-md-1": "MuiGrid-grid-md-1-60",
                                          "grid-md-10": "MuiGrid-grid-md-10-69",
                                          "grid-md-11": "MuiGrid-grid-md-11-70",
                                          "grid-md-12": "MuiGrid-grid-md-12-71",
                                          "grid-md-2": "MuiGrid-grid-md-2-61",
                                          "grid-md-3": "MuiGrid-grid-md-3-62",
                                          "grid-md-4": "MuiGrid-grid-md-4-63",
                                          "grid-md-5": "MuiGrid-grid-md-5-64",
                                          "grid-md-6": "MuiGrid-grid-md-6-65",
                                          "grid-md-7": "MuiGrid-grid-md-7-66",
                                          "grid-md-8": "MuiGrid-grid-md-8-67",
                                          "grid-md-9": "MuiGrid-grid-md-9-68",
                                          "grid-md-auto": "MuiGrid-grid-md-auto-58",
                                          "grid-md-true": "MuiGrid-grid-md-true-59",
                                          "grid-sm-1": "MuiGrid-grid-sm-1-46",
                                          "grid-sm-10": "MuiGrid-grid-sm-10-55",
                                          "grid-sm-11": "MuiGrid-grid-sm-11-56",
                                          "grid-sm-12": "MuiGrid-grid-sm-12-57",
                                          "grid-sm-2": "MuiGrid-grid-sm-2-47",
                                          "grid-sm-3": "MuiGrid-grid-sm-3-48",
                                          "grid-sm-4": "MuiGrid-grid-sm-4-49",
                                          "grid-sm-5": "MuiGrid-grid-sm-5-50",
                                          "grid-sm-6": "MuiGrid-grid-sm-6-51",
                                          "grid-sm-7": "MuiGrid-grid-sm-7-52",
                                          "grid-sm-8": "MuiGrid-grid-sm-8-53",
                                          "grid-sm-9": "MuiGrid-grid-sm-9-54",
                                          "grid-sm-auto": "MuiGrid-grid-sm-auto-44",
                                          "grid-sm-true": "MuiGrid-grid-sm-true-45",
                                          "grid-xl-1": "MuiGrid-grid-xl-1-88",
                                          "grid-xl-10": "MuiGrid-grid-xl-10-97",
                                          "grid-xl-11": "MuiGrid-grid-xl-11-98",
                                          "grid-xl-12": "MuiGrid-grid-xl-12-99",
                                          "grid-xl-2": "MuiGrid-grid-xl-2-89",
                                          "grid-xl-3": "MuiGrid-grid-xl-3-90",
                                          "grid-xl-4": "MuiGrid-grid-xl-4-91",
                                          "grid-xl-5": "MuiGrid-grid-xl-5-92",
                                          "grid-xl-6": "MuiGrid-grid-xl-6-93",
                                          "grid-xl-7": "MuiGrid-grid-xl-7-94",
                                          "grid-xl-8": "MuiGrid-grid-xl-8-95",
                                          "grid-xl-9": "MuiGrid-grid-xl-9-96",
                                          "grid-xl-auto": "MuiGrid-grid-xl-auto-86",
                                          "grid-xl-true": "MuiGrid-grid-xl-true-87",
                                          "grid-xs-1": "MuiGrid-grid-xs-1-32",
                                          "grid-xs-10": "MuiGrid-grid-xs-10-41",
                                          "grid-xs-11": "MuiGrid-grid-xs-11-42",
                                          "grid-xs-12": "MuiGrid-grid-xs-12-43",
                                          "grid-xs-2": "MuiGrid-grid-xs-2-33",
                                          "grid-xs-3": "MuiGrid-grid-xs-3-34",
                                          "grid-xs-4": "MuiGrid-grid-xs-4-35",
                                          "grid-xs-5": "MuiGrid-grid-xs-5-36",
                                          "grid-xs-6": "MuiGrid-grid-xs-6-37",
                                          "grid-xs-7": "MuiGrid-grid-xs-7-38",
                                          "grid-xs-8": "MuiGrid-grid-xs-8-39",
                                          "grid-xs-9": "MuiGrid-grid-xs-9-40",
                                          "grid-xs-auto": "MuiGrid-grid-xs-auto-30",
                                          "grid-xs-true": "MuiGrid-grid-xs-true-31",
                                          "item": "MuiGrid-item-4",
                                          "justify-xs-center": "MuiGrid-justify-xs-center-20",
                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-21",
                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-23",
                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-22",
                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-24",
                                          "spacing-xs-16": "MuiGrid-spacing-xs-16-26",
                                          "spacing-xs-24": "MuiGrid-spacing-xs-24-27",
                                          "spacing-xs-32": "MuiGrid-spacing-xs-32-28",
                                          "spacing-xs-40": "MuiGrid-spacing-xs-40-29",
                                          "spacing-xs-8": "MuiGrid-spacing-xs-8-25",
                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-9",
                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-10",
                                          "zeroMinWidth": "MuiGrid-zeroMinWidth-5",
                                        }
                                      }
                                      component="div"
                                      container={true}
                                      direction="row"
                                      item={false}
                                      justify="flex-start"
                                      lg={false}
                                      md={false}
                                      sm={false}
                                      spacing={24}
                                      wrap="wrap"
                                      xl={false}
                                      xs={false}
                                      zeroMinWidth={false}
                                    >
                                      <div
                                        className="MuiGrid-container-3 MuiGrid-spacing-xs-24-27"
                                      />
                                    </Grid>
                                  </WithStyles(Grid)>
                                </div>
                              </Grid>
                            </WithStyles(Grid)>
                          </div>
                        </Grid>
                      </WithStyles(Grid)>
                    </Page>
                  </WithStyles(Page)>
                </StandardPage>
              </DashboardClass>
            </WithStyles(DashboardClass)>
          </Dashboard>
        </MuiPickersUtilsProvider>
      </MuiThemeProvider>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Dashboard test Rendering MyLatestPublications tab 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        fullHeight={true}
        noHeader={true}
        noPadding={true}
      >
        <WithStyles(PublicationStats)
          publicationsStats={
            Object {
              "scopus_citation_count_i": Object {
                "count": 10,
              },
              "thomson_citation_count_i": Object {
                "count": 10,
              },
            }
          }
        />
      </StandardCard>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        noHeader={true}
      >
        <WithStyles(Tabs)
          centered={true}
          classes={
            Object {
              "indicator": undefined,
            }
          }
          fullWidth={true}
          onChange={[Function]}
          value={2}
        >
          <WithStyles(Tab)
            key="1"
            label="My works"
            value={1}
          />
          <WithStyles(Tab)
            key="2"
            label="My trending works"
            value={2}
          />
        </WithStyles(Tabs)>
        <WithStyles(Grid)
          container={true}
          spacing={24}
          style={
            Object {
              "marginTop": 24,
            }
          }
        >
          <WithStyles(Grid)
            item={true}
            style={
              Object {
                "display": "none",
              }
            }
            xs={12}
          >
            <withRouter(Connect(WithStyles(MyLatestPublications))) />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            style={Object {}}
            xs={12}
          >
            <Connect(WithStyles(MyTrendingPublications)) />
          </WithStyles(Grid)>
        </WithStyles(Grid)>
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test Rendering MyTrendingPublications tab 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        className="barChart"
        customBackgroundColor="#1e7d94"
        customTitleColor="#FFFFFF"
        title="eSpace works per year"
      >
        <AuthorsPublicationsPerYearChart
          categories={
            Array [
              1977,
              1980,
              1982,
              1983,
              1984,
              1985,
              1986,
              1987,
              1988,
              1989,
              1990,
              1991,
              1992,
              1993,
              1994,
              1995,
              1996,
              1997,
              1998,
              1999,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2006,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012,
              2013,
              2014,
              2015,
              2016,
              2017,
            ]
          }
          className="barChart"
          series={
            Array [
              Object {
                "data": Array [
                  1,
                  1,
                  3,
                  5,
                  5,
                  8,
                  8,
                  2,
                  5,
                  3,
                  6,
                  4,
                  4,
                  7,
                  8,
                  8,
                  6,
                  4,
                  10,
                  10,
                  8,
                  10,
                  12,
                  7,
                  19,
                  11,
                  11,
                  12,
                  6,
                  8,
                  15,
                  10,
                  9,
                  3,
                  13,
                  6,
                  5,
                  5,
                ],
                "name": "Journal Article",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  1,
                  4,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  6,
                  4,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  1,
                  1,
                  1,
                  1,
                  0,
                  1,
                  0,
                  5,
                  0,
                  0,
                  2,
                  1,
                  1,
                  0,
                  9,
                  0,
                ],
                "name": "Conference Paper",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  4,
                  0,
                  1,
                  0,
                  0,
                  2,
                  1,
                  0,
                  1,
                  0,
                  1,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Book Chapter",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Book",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Other",
              },
            ]
          }
          yAxisTitle="Total publications"
        />
      </StandardCard>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      sm={4}
      xs={12}
    >
      <StandardCard
        className="donutChart"
        customBackgroundColor="#d72865"
        customTitleColor="#FFFFFF"
        fullHeight={true}
        noPadding={true}
        title="Work types overview"
      >
        <AuthorsPublicationTypesCountChart
          className="donutChart"
          series={
            Array [
              Object {
                "data": Array [
                  Array [
                    "Journal Article",
                    278,
                  ],
                  Array [
                    "Conference Paper",
                    42,
                  ],
                  Array [
                    "Book Chapter",
                    12,
                  ],
                  Array [
                    "Book",
                    1,
                  ],
                  Array [
                    "Other",
                    1,
                  ],
                ],
                "name": "Work types overview",
              },
            ]
          }
        />
      </StandardCard>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      sm={8}
      xs={12}
    >
      <StandardCard
        fullHeight={true}
        noHeader={true}
        noPadding={true}
      >
        <WithStyles(PublicationStats)
          publicationsStats={
            Object {
              "scopus_citation_count_i": Object {
                "count": 10,
              },
              "thomson_citation_count_i": Object {
                "count": 10,
              },
            }
          }
        />
      </StandardCard>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        noHeader={true}
      >
        <WithStyles(Tabs)
          centered={true}
          classes={
            Object {
              "indicator": undefined,
            }
          }
          fullWidth={true}
          onChange={[Function]}
          value={1}
        >
          <WithStyles(Tab)
            key="1"
            label="My works"
            value={1}
          />
          <WithStyles(Tab)
            key="2"
            label="My trending works"
            value={2}
          />
        </WithStyles(Tabs)>
        <WithStyles(Grid)
          container={true}
          spacing={24}
          style={
            Object {
              "marginTop": 24,
            }
          }
        >
          <WithStyles(Grid)
            item={true}
            style={Object {}}
            xs={12}
          >
            <withRouter(Connect(WithStyles(MyLatestPublications))) />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            style={
              Object {
                "display": "none",
              }
            }
            xs={12}
          >
            <Connect(WithStyles(MyTrendingPublications)) />
          </WithStyles(Grid)>
        </WithStyles(Grid)>
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test Should only render barChart 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        className="barChart"
        customBackgroundColor="#1e7d94"
        customTitleColor="#FFFFFF"
        title="eSpace works per year"
      >
        <AuthorsPublicationsPerYearChart
          categories={
            Array [
              1977,
              1980,
              1982,
              1983,
              1984,
              1985,
              1986,
              1987,
              1988,
              1989,
              1990,
              1991,
              1992,
              1993,
              1994,
              1995,
              1996,
              1997,
              1998,
              1999,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2006,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012,
              2013,
              2014,
              2015,
              2016,
              2017,
            ]
          }
          className="barChart"
          series={
            Array [
              Object {
                "data": Array [
                  1,
                  1,
                  3,
                  5,
                  5,
                  8,
                  8,
                  2,
                  5,
                  3,
                  6,
                  4,
                  4,
                  7,
                  8,
                  8,
                  6,
                  4,
                  10,
                  10,
                  8,
                  10,
                  12,
                  7,
                  19,
                  11,
                  11,
                  12,
                  6,
                  8,
                  15,
                  10,
                  9,
                  3,
                  13,
                  6,
                  5,
                  5,
                ],
                "name": "Journal Article",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  1,
                  4,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  6,
                  4,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  1,
                  1,
                  1,
                  1,
                  0,
                  1,
                  0,
                  5,
                  0,
                  0,
                  2,
                  1,
                  1,
                  0,
                  9,
                  0,
                ],
                "name": "Conference Paper",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  4,
                  0,
                  1,
                  0,
                  0,
                  2,
                  1,
                  0,
                  1,
                  0,
                  1,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Book Chapter",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Book",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Other",
              },
            ]
          }
          yAxisTitle="Total publications"
        />
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test componentDidMount without account id 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        fullHeight={true}
        noHeader={true}
        noPadding={true}
      >
        <WithStyles(PublicationStats)
          publicationsStats={
            Object {
              "scopus_citation_count_i": Object {
                "count": 10,
              },
              "thomson_citation_count_i": Object {
                "count": 10,
              },
            }
          }
        />
      </StandardCard>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        noHeader={true}
      >
        <WithStyles(Tabs)
          centered={true}
          classes={
            Object {
              "indicator": undefined,
            }
          }
          fullWidth={true}
          onChange={[Function]}
          value={1}
        >
          <WithStyles(Tab)
            key="1"
            label="My works"
            value={1}
          />
          <WithStyles(Tab)
            key="2"
            label="My trending works"
            value={2}
          />
        </WithStyles(Tabs)>
        <WithStyles(Grid)
          container={true}
          spacing={24}
          style={
            Object {
              "marginTop": 24,
            }
          }
        >
          <WithStyles(Grid)
            item={true}
            style={Object {}}
            xs={12}
          >
            <withRouter(Connect(WithStyles(MyLatestPublications))) />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            style={
              Object {
                "display": "none",
              }
            }
            xs={12}
          >
            <Connect(WithStyles(MyTrendingPublications)) />
          </WithStyles(Grid)>
        </WithStyles(Grid)>
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test displays a lure to a single work when the user has incomplete NTRO submissions 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="View and Complete"
        message="We have found 1 work(s) that requires more information."
        title="NTRO Data Required"
        type="warning"
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test displays a lure when the user has incomplete NTRO submissions 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="View and Complete"
        message="We have found 2 work(s) that require more information."
        title="NTRO Data Required"
        type="warning"
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test does render latest and trending publications tabs correctly 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        noHeader={true}
      >
        <WithStyles(Tabs)
          centered={true}
          classes={
            Object {
              "indicator": undefined,
            }
          }
          fullWidth={true}
          onChange={[Function]}
          value={1}
        >
          <WithStyles(Tab)
            key="1"
            label="My works"
            value={1}
          />
          <WithStyles(Tab)
            key="2"
            label="My trending works"
            value={2}
          />
        </WithStyles(Tabs)>
        <WithStyles(Grid)
          container={true}
          spacing={24}
          style={
            Object {
              "marginTop": 24,
            }
          }
        >
          <WithStyles(Grid)
            item={true}
            style={Object {}}
            xs={12}
          >
            <withRouter(Connect(WithStyles(MyLatestPublications))) />
          </WithStyles(Grid)>
          <WithStyles(Grid)
            item={true}
            style={
              Object {
                "display": "none",
              }
            }
            xs={12}
          >
            <Connect(WithStyles(MyTrendingPublications)) />
          </WithStyles(Grid)>
        </WithStyles(Grid)>
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test does render latest publications tab correctly 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        noHeader={true}
      >
        <WithStyles(Tabs)
          centered={true}
          classes={
            Object {
              "indicator": undefined,
            }
          }
          fullWidth={true}
          onChange={[Function]}
          value={1}
        >
          <WithStyles(Tab)
            key="1"
            label="My works"
            value={1}
          />
        </WithStyles(Tabs)>
        <WithStyles(Grid)
          container={true}
          spacing={24}
          style={
            Object {
              "marginTop": 24,
            }
          }
        >
          <WithStyles(Grid)
            item={true}
            style={Object {}}
            xs={12}
          >
            <withRouter(Connect(WithStyles(MyLatestPublications))) />
          </WithStyles(Grid)>
        </WithStyles(Grid)>
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test does render the donut/bar graph cards when data is available 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      sm={8}
      xs={12}
    >
      <StandardCard
        className="barChart"
        customBackgroundColor="#1e7d94"
        customTitleColor="#FFFFFF"
        title="eSpace works per year"
      >
        <AuthorsPublicationsPerYearChart
          categories={
            Array [
              1977,
              1980,
              1982,
              1983,
              1984,
              1985,
              1986,
              1987,
              1988,
              1989,
              1990,
              1991,
              1992,
              1993,
              1994,
              1995,
              1996,
              1997,
              1998,
              1999,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2006,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012,
              2013,
              2014,
              2015,
              2016,
              2017,
            ]
          }
          className="barChart"
          series={
            Array [
              Object {
                "data": Array [
                  1,
                  1,
                  3,
                  5,
                  5,
                  8,
                  8,
                  2,
                  5,
                  3,
                  6,
                  4,
                  4,
                  7,
                  8,
                  8,
                  6,
                  4,
                  10,
                  10,
                  8,
                  10,
                  12,
                  7,
                  19,
                  11,
                  11,
                  12,
                  6,
                  8,
                  15,
                  10,
                  9,
                  3,
                  13,
                  6,
                  5,
                  5,
                ],
                "name": "Journal Article",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  1,
                  4,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  6,
                  4,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  1,
                  1,
                  1,
                  1,
                  0,
                  1,
                  0,
                  5,
                  0,
                  0,
                  2,
                  1,
                  1,
                  0,
                  9,
                  0,
                ],
                "name": "Conference Paper",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  4,
                  0,
                  1,
                  0,
                  0,
                  2,
                  1,
                  0,
                  1,
                  0,
                  1,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Book Chapter",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Book",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Other",
              },
            ]
          }
          yAxisTitle="Total publications"
        />
      </StandardCard>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      sm={4}
      xs={12}
    >
      <StandardCard
        className="donutChart"
        customBackgroundColor="#d72865"
        customTitleColor="#FFFFFF"
        fullHeight={true}
        noPadding={true}
        title="Work types overview"
      >
        <AuthorsPublicationTypesCountChart
          className="donutChart"
          series={
            Array [
              Object {
                "data": Array [
                  Array [
                    "Journal Article",
                    278,
                  ],
                  Array [
                    "Conference Paper",
                    42,
                  ],
                  Array [
                    "Book Chapter",
                    12,
                  ],
                  Array [
                    "Book",
                    1,
                  ],
                  Array [
                    "Other",
                    1,
                  ],
                ],
                "name": "Work types overview",
              },
            ]
          }
        />
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test does render trending publications tab correctly 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        noHeader={true}
      >
        <WithStyles(Tabs)
          centered={true}
          classes={
            Object {
              "indicator": undefined,
            }
          }
          fullWidth={true}
          onChange={[Function]}
          value={1}
        >
          <WithStyles(Tab)
            key="2"
            label="My trending works"
            value={2}
          />
        </WithStyles(Tabs)>
        <WithStyles(Grid)
          container={true}
          spacing={24}
          style={
            Object {
              "marginTop": 24,
            }
          }
        >
          <WithStyles(Grid)
            item={true}
            style={
              Object {
                "display": "none",
              }
            }
            xs={12}
          >
            <Connect(WithStyles(MyTrendingPublications)) />
          </WithStyles(Grid)>
        </WithStyles(Grid)>
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test doesn't render either the publications lure or the add a record lure while the pub count is still loading 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test doesn't render possibly your publications lure and shows the add a record lure 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test doesn't render possibly your publications lure or the add a record lure 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test doesn't render the bar/donut graph cards when no data is available 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test publicationStats should not render stats 2 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={true}
    />
    <WithStyles(Grid)
      item={true}
    >
      <WithStyles(InlineLoader)
        message="Loading your dashboard"
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      xs={true}
    />
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test publicationStats should render stats 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        className="barChart"
        customBackgroundColor="#1e7d94"
        customTitleColor="#FFFFFF"
        title="eSpace works per year"
      >
        <AuthorsPublicationsPerYearChart
          categories={
            Array [
              1977,
              1980,
              1982,
              1983,
              1984,
              1985,
              1986,
              1987,
              1988,
              1989,
              1990,
              1991,
              1992,
              1993,
              1994,
              1995,
              1996,
              1997,
              1998,
              1999,
              2000,
              2001,
              2002,
              2003,
              2004,
              2005,
              2006,
              2007,
              2008,
              2009,
              2010,
              2011,
              2012,
              2013,
              2014,
              2015,
              2016,
              2017,
            ]
          }
          className="barChart"
          series={
            Array [
              Object {
                "data": Array [
                  1,
                  1,
                  3,
                  5,
                  5,
                  8,
                  8,
                  2,
                  5,
                  3,
                  6,
                  4,
                  4,
                  7,
                  8,
                  8,
                  6,
                  4,
                  10,
                  10,
                  8,
                  10,
                  12,
                  7,
                  19,
                  11,
                  11,
                  12,
                  6,
                  8,
                  15,
                  10,
                  9,
                  3,
                  13,
                  6,
                  5,
                  5,
                ],
                "name": "Journal Article",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  1,
                  4,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  6,
                  4,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  3,
                  1,
                  1,
                  1,
                  1,
                  0,
                  1,
                  0,
                  5,
                  0,
                  0,
                  2,
                  1,
                  1,
                  0,
                  9,
                  0,
                ],
                "name": "Conference Paper",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  4,
                  0,
                  1,
                  0,
                  0,
                  2,
                  1,
                  0,
                  1,
                  0,
                  1,
                  2,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Book Chapter",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Book",
              },
              Object {
                "data": Array [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                ],
                "name": "Other",
              },
            ]
          }
          yAxisTitle="Total publications"
        />
      </StandardCard>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      sm={4}
      xs={12}
    >
      <StandardCard
        className="donutChart"
        customBackgroundColor="#d72865"
        customTitleColor="#FFFFFF"
        fullHeight={true}
        noPadding={true}
        title="Work types overview"
      >
        <AuthorsPublicationTypesCountChart
          className="donutChart"
          series={
            Array [
              Object {
                "data": Array [
                  Array [
                    "Journal Article",
                    278,
                  ],
                  Array [
                    "Conference Paper",
                    42,
                  ],
                  Array [
                    "Book Chapter",
                    12,
                  ],
                  Array [
                    "Book",
                    1,
                  ],
                  Array [
                    "Other",
                    1,
                  ],
                ],
                "name": "Work types overview",
              },
            ]
          }
        />
      </StandardCard>
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      sm={8}
      xs={12}
    >
      <StandardCard
        fullHeight={true}
        noHeader={true}
        noPadding={true}
      >
        <WithStyles(PublicationStats)
          publicationsStats={
            Object {
              "scopus_citation_count_i": Object {
                "count": 10,
              },
              "thomson_citation_count_i": Object {
                "count": 10,
              },
            }
          }
        />
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test publicationStats should render stats 1 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        fullHeight={true}
        noHeader={true}
        noPadding={true}
      >
        <WithStyles(PublicationStats)
          publicationsStats={
            Object {
              "scopus_citation_count_i": Object {
                "count": 0,
              },
              "thomson_citation_count_i": Object {
                "count": 10,
              },
            }
          }
        />
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test publicationStats should render stats 2 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <StandardCard
        fullHeight={true}
        noHeader={true}
        noPadding={true}
      >
        <WithStyles(PublicationStats)
          publicationsStats={
            Object {
              "scopus_citation_count_i": Object {
                "count": 10,
              },
              "thomson_citation_count_i": Object {
                "count": 0,
              },
            }
          }
        />
      </StandardCard>
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test renders alert for non-authors 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  />
</StandardPage>
`;

exports[`Dashboard test renders dashboard header only 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Add a missing work"
        message="We found nothing new for you to claim, but you may add a work any time."
        title="Add your work to eSpace"
        type="info_outline"
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test renders possibly your publications lure but not the add a record lure 1`] = `
<StandardPage>
  <WithStyles(Grid)
    container={true}
    spacing={24}
  >
    <WithStyles(Grid)
      item={true}
      xs={12}
    >
      <WithStyles(DashboardAuthorProfile)
        authorDetails={
          Object {
            "espace": Object {
              "doc_count": 357,
              "first_year": 1975,
              "last_year": 2018,
            },
            "espace_id": 20288,
            "family_name": "Researcher",
            "given_name": "J",
            "google_scholar_id": "kUemDfMAAAAJ",
            "image_exists": 1,
            "mypub_url": "uqresearcher",
            "orcid_id": "0000-0001-1111-1111",
            "org_units": Array [
              "Institute for Molecular Bioscience",
              "Institute for Molecular Bioscience",
              "School of Chemistry and Molecular Biosciences",
              "The University of Queensland Diamantina Institute",
            ],
            "positions": Array [
              "Affiliate Professor",
              "Casual Affiliate Professor",
              "Affiliate Professorial Res Fellow",
              "ARC Australian Laureate Fellow",
            ],
            "publons_id": "",
            "researcher_id": "G-111-1111",
            "scopus_id": "",
            "staff_id": "0000111",
            "title": "Professor",
            "uqr_id": 14,
            "username": "uqresearcher",
          }
        }
        history={Object {}}
      />
    </WithStyles(Grid)>
    <WithStyles(Grid)
      item={true}
      style={
        Object {
          "marginTop": -27,
        }
      }
      xs={12}
    >
      <WithStyles(Alert)
        action={[Function]}
        actionButtonLabel="Claim your works now"
        allowDismiss={true}
        message="We have found 5 record(s) that could possibly be your works."
        title="Claim now!"
        type="info_outline"
      />
    </WithStyles(Grid)>
  </WithStyles(Grid)>
</StandardPage>
`;

exports[`Dashboard test should get styles for full render 1`] = `
<Provider
  store={
    Object {
      "dispatch": [MockFunction],
      "getState": [MockFunction],
      "subscribe": [MockFunction],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <MuiThemeProvider
        theme={
          Object {
            "breakpoints": Object {
              "between": [Function],
              "down": [Function],
              "keys": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
              "only": [Function],
              "up": [Function],
              "values": Object {
                "lg": 1280,
                "md": 960,
                "sm": 600,
                "xl": 1920,
                "xs": 0,
              },
              "width": [Function],
            },
            "direction": "ltr",
            "graphs": Object {
              "color1": "#d72865",
              "color2": "#1e7d94",
              "color3": "#49075E",
              "color4": "#468fcc",
              "color5": "#f28620",
              "color6": "#333333",
              "color7": "#595959",
            },
            "hexToRGBA": [Function],
            "mixins": Object {
              "gutters": [Function],
              "toolbar": Object {
                "@media (min-width:0px) and (orientation: landscape)": Object {
                  "minHeight": 48,
                },
                "@media (min-width:600px)": Object {
                  "minHeight": 64,
                },
                "minHeight": 56,
              },
            },
            "overrides": Object {
              "MuiFormLabel": Object {
                "root": Object {
                  "overflow": "hidden",
                  "textOverflow": "ellipsis",
                  "whiteSpace": "nowrap",
                  "width": "100%",
                },
              },
            },
            "palette": Object {
              "accent": Object {
                "dark": "#2a557d",
                "light": "#54acff",
                "main": "#4085C6",
              },
              "action": Object {
                "active": "rgba(0, 0, 0, 0.54)",
                "disabled": "rgba(0, 0, 0, 0.26)",
                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                "hover": "rgba(0, 0, 0, 0.08)",
                "hoverOpacity": 0.08,
                "selected": "rgba(0, 0, 0, 0.14)",
              },
              "augmentColor": [Function],
              "background": Object {
                "default": "#fafafa",
                "paper": "#fff",
              },
              "common": Object {
                "black": "#000",
                "white": "#fff",
              },
              "contrastThreshold": 3,
              "divider": "rgba(0, 0, 0, 0.12)",
              "error": Object {
                "contrastText": "#fff",
                "dark": "#790000",
                "light": "#ff0000",
                "main": "#c80000",
              },
              "getContrastText": [Function],
              "grey": Object {
                "100": "#f5f5f5",
                "200": "#eeeeee",
                "300": "#e0e0e0",
                "400": "#bdbdbd",
                "50": "#fafafa",
                "500": "#9e9e9e",
                "600": "#757575",
                "700": "#616161",
                "800": "#424242",
                "900": "#212121",
                "A100": "#d5d5d5",
                "A200": "#aaaaaa",
                "A400": "#303030",
                "A700": "#616161",
              },
              "primary": Object {
                "contrastText": "#fff",
                "dark": "#3b1a59",
                "gradient": Object {
                  "diagonal": Object {
                    "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                  "horizontal": Object {
                    "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                    "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                  },
                },
                "light": "#962A8B",
                "main": "#51247A",
              },
              "secondary": Object {
                "contrastText": "#fff",
                "dark": "#333333",
                "light": "#f2f2f2",
                "main": "#595959",
              },
              "success": Object {
                "dark": "#005000",
                "light": "#00a700",
                "main": "#007200",
              },
              "text": Object {
                "disabled": "rgba(0, 0, 0, 0.38)",
                "hint": "rgba(0, 0, 0, 0.38)",
                "primary": "rgba(0, 0, 0, 0.87)",
                "secondary": "rgba(0, 0, 0, 0.54)",
              },
              "tonalOffset": 0.2,
              "type": "light",
              "warning": Object {
                "dark": "#542400",
                "light": "#ff9a57",
                "main": "#bf5000",
              },
              "white": Object {
                "main": "#FFFFFF",
              },
            },
            "props": Object {},
            "shadows": Array [
              "none",
              "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
              "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
              "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
              "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
              "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
              "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
              "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
              "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
              "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
              "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
              "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
              "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
              "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
              "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
              "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
              "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
              "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
              "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
              "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
              "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
              "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
            ],
            "shape": Object {
              "borderRadius": 4,
            },
            "spacing": Object {
              "unit": 8,
            },
            "status": Object {
              "danger": "#f44336",
              "warning": "#ff9800",
            },
            "transitions": Object {
              "create": [Function],
              "duration": Object {
                "complex": 375,
                "enteringScreen": 225,
                "leavingScreen": 195,
                "short": 250,
                "shorter": 200,
                "shortest": 150,
                "standard": 300,
              },
              "easing": Object {
                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
              },
              "getAutoHeightDuration": [Function],
            },
            "typography": Object {
              "body1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body1Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.5,
              },
              "body2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "body2Next": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 300,
                "letterSpacing": "0.01071em",
                "lineHeight": 1.5,
              },
              "button": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.5,
                "textTransform": "uppercase",
              },
              "buttonNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.02857em",
                "lineHeight": 1.5,
                "textTransform": "uppercase",
              },
              "caption": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "captionNext": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.03333em",
                "lineHeight": 1.66,
              },
              "display1": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "lineHeight": "1.20588em",
              },
              "display2": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.8125rem",
                "fontWeight": 300,
                "lineHeight": "1.13333em",
                "marginLeft": "-.02em",
              },
              "display3": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.5rem",
                "fontWeight": 300,
                "letterSpacing": "-.02em",
                "lineHeight": "1.30357em",
                "marginLeft": "-.02em",
              },
              "display4": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "7rem",
                "fontWeight": 200,
                "letterSpacing": "-.04em",
                "lineHeight": "1.14286em",
                "marginLeft": "-.04em",
              },
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "fontSize": 14,
              "fontWeightLight": 200,
              "fontWeightMedium": 400,
              "fontWeightRegular": 300,
              "h1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "6rem",
                "fontWeight": 200,
                "letterSpacing": "-0.01562em",
                "lineHeight": 1,
              },
              "h2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3.75rem",
                "fontWeight": 200,
                "letterSpacing": "-0.00833em",
                "lineHeight": 1,
              },
              "h3": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "3rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.04,
              },
              "h4": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "2.125rem",
                "fontWeight": 300,
                "letterSpacing": "0.00735em",
                "lineHeight": 1.17,
              },
              "h5": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "letterSpacing": "0em",
                "lineHeight": 1.33,
              },
              "h6": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.25rem",
                "fontWeight": 400,
                "letterSpacing": "0.0075em",
                "lineHeight": 1.6,
              },
              "headline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.5rem",
                "fontWeight": 300,
                "lineHeight": "1.35417em",
              },
              "overline": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.75rem",
                "fontWeight": 300,
                "letterSpacing": "0.08333em",
                "lineHeight": 2.66,
                "textTransform": "uppercase",
              },
              "pxToRem": [Function],
              "round": [Function],
              "subheading": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "lineHeight": "1.5em",
              },
              "subtitle1": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1rem",
                "fontWeight": 300,
                "letterSpacing": "0.00938em",
                "lineHeight": 1.75,
              },
              "subtitle2": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "0.875rem",
                "fontWeight": 400,
                "letterSpacing": "0.00714em",
                "lineHeight": 1.57,
              },
              "suppressDeprecationWarnings": true,
              "title": Object {
                "color": "rgba(0, 0, 0, 0.87)",
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": "1.3125rem",
                "fontWeight": 400,
                "lineHeight": "1.16667em",
              },
              "useNextVariants": true,
            },
            "zIndex": Object {
              "appBar": 1100,
              "drawer": 1200,
              "mobileStepper": 1000,
              "modal": 1300,
              "snackbar": 1400,
              "tooltip": 1500,
            },
          }
        }
      >
        <MuiPickersUtilsProvider
          utils={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "locale": undefined,
                    "moment": undefined,
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
        >
          <DashboardClass
            account={
              Object {
                "barcode": "240675201000000",
                "blocked": false,
                "canMasquerade": false,
                "class": Array [
                  "Campus-MATERHOSP",
                ],
                "classes": Array [],
                "expiryDate": "31-12-19",
                "firstName": "J",
                "groups": Array [
                  "CN=Sci Faculty",
                ],
                "hasSession": true,
                "homeLib": "St Lucia",
                "id": "uqresearcher",
                "lastName": "Researcher",
                "mail": "j.Researcher@uq.edu.au",
                "name": "J Researcher",
                "tokenBased": false,
                "type": 3,
              }
            }
            accountAuthorDetailsLoading={false}
            actions={
              Object {
                "countPossiblyYourPublications": [MockFunction] {
                  "calls": Array [
                    Array [
                      "uqresearcher",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "loadAuthorPublicationsStats": [MockFunction] {
                  "calls": Array [
                    Array [
                      "uqresearcher",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
                "searchAuthorPublications": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {},
                      "incomplete",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                },
              }
            }
            classes={Object {}}
            hidePossiblyYourPublicationsLure={false}
            history={Object {}}
            incomplete={
              Object {
                "loadingPublicationsList": false,
                "publicationsList": Array [],
                "publicationsListFacets": Object {},
                "publicationsListPagingData": Object {},
              }
            }
            loadingIncompleteRecordData={false}
            loadingPublicationsByYear={false}
            loadingPublicationsStats={false}
            possiblyYourPublicationsCountLoading={false}
            publicationTotalCount={
              Object {
                "articleCount": 313,
                "articleFirstYear": "1970",
                "articleLastYear": "2054",
              }
            }
            theme={Object {}}
          >
            <StandardPage>
              <WithStyles(Page)>
                <Page
                  classes={
                    Object {
                      "layoutCard": "Page-layoutCard-1",
                      "layoutTitle": "Page-layoutTitle-2",
                    }
                  }
                  theme={
                    Object {
                      "breakpoints": Object {
                        "between": [Function],
                        "down": [Function],
                        "keys": Array [
                          "xs",
                          "sm",
                          "md",
                          "lg",
                          "xl",
                        ],
                        "only": [Function],
                        "up": [Function],
                        "values": Object {
                          "lg": 1280,
                          "md": 960,
                          "sm": 600,
                          "xl": 1920,
                          "xs": 0,
                        },
                        "width": [Function],
                      },
                      "direction": "ltr",
                      "graphs": Object {
                        "color1": "#d72865",
                        "color2": "#1e7d94",
                        "color3": "#49075E",
                        "color4": "#468fcc",
                        "color5": "#f28620",
                        "color6": "#333333",
                        "color7": "#595959",
                      },
                      "hexToRGBA": [Function],
                      "mixins": Object {
                        "gutters": [Function],
                        "toolbar": Object {
                          "@media (min-width:0px) and (orientation: landscape)": Object {
                            "minHeight": 48,
                          },
                          "@media (min-width:600px)": Object {
                            "minHeight": 64,
                          },
                          "minHeight": 56,
                        },
                      },
                      "overrides": Object {
                        "MuiFormLabel": Object {
                          "root": Object {
                            "overflow": "hidden",
                            "textOverflow": "ellipsis",
                            "whiteSpace": "nowrap",
                            "width": "100%",
                          },
                        },
                      },
                      "palette": Object {
                        "accent": Object {
                          "dark": "#2a557d",
                          "light": "#54acff",
                          "main": "#4085C6",
                        },
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "augmentColor": [Function],
                        "background": Object {
                          "default": "#fafafa",
                          "paper": "#fff",
                        },
                        "common": Object {
                          "black": "#000",
                          "white": "#fff",
                        },
                        "contrastThreshold": 3,
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#790000",
                          "light": "#ff0000",
                          "main": "#c80000",
                        },
                        "getContrastText": [Function],
                        "grey": Object {
                          "100": "#f5f5f5",
                          "200": "#eeeeee",
                          "300": "#e0e0e0",
                          "400": "#bdbdbd",
                          "50": "#fafafa",
                          "500": "#9e9e9e",
                          "600": "#757575",
                          "700": "#616161",
                          "800": "#424242",
                          "900": "#212121",
                          "A100": "#d5d5d5",
                          "A200": "#aaaaaa",
                          "A400": "#303030",
                          "A700": "#616161",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#3b1a59",
                          "gradient": Object {
                            "diagonal": Object {
                              "background": "linear-gradient(135deg, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                              "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                            },
                            "horizontal": Object {
                              "background": "linear-gradient(to right, rgb(81,36,122) 55%,rgb(150,42,139) 100%)",
                              "filter": "progid:DXImageTransform.Microsoft.gradient( startColorstr=\\"#51247a\\", endColorstr=\\"#962a8b\\",GradientType=1 )",
                            },
                          },
                          "light": "#962A8B",
                          "main": "#51247A",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#333333",
                          "light": "#f2f2f2",
                          "main": "#595959",
                        },
                        "success": Object {
                          "dark": "#005000",
                          "light": "#00a700",
                          "main": "#007200",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                        "tonalOffset": 0.2,
                        "type": "light",
                        "warning": Object {
                          "dark": "#542400",
                          "light": "#ff9a57",
                          "main": "#bf5000",
                        },
                        "white": Object {
                          "main": "#FFFFFF",
                        },
                      },
                      "props": Object {},
                      "shadows": Array [
                        "none",
                        "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                        "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                        "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                        "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                        "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                        "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                        "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                        "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                        "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                        "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                        "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                        "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                        "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                        "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                        "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                        "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                        "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                        "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                        "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                        "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                        "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                        "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                        "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                        "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                      ],
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "status": Object {
                        "danger": "#f44336",
                        "warning": "#ff9800",
                      },
                      "transitions": Object {
                        "create": [Function],
                        "duration": Object {
                          "complex": 375,
                          "enteringScreen": 225,
                          "leavingScreen": 195,
                          "short": 250,
                          "shorter": 200,
                          "shortest": 150,
                          "standard": 300,
                        },
                        "easing": Object {
                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                        },
                        "getAutoHeightDuration": [Function],
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1rem",
                          "fontWeight": 300,
                          "letterSpacing": "0.00938em",
                          "lineHeight": 1.5,
                        },
                        "body1Next": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1rem",
                          "fontWeight": 300,
                          "letterSpacing": "0.00938em",
                          "lineHeight": 1.5,
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.875rem",
                          "fontWeight": 300,
                          "letterSpacing": "0.01071em",
                          "lineHeight": 1.5,
                        },
                        "body2Next": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.875rem",
                          "fontWeight": 300,
                          "letterSpacing": "0.01071em",
                          "lineHeight": 1.5,
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.02857em",
                          "lineHeight": 1.5,
                          "textTransform": "uppercase",
                        },
                        "buttonNext": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.02857em",
                          "lineHeight": 1.5,
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.75rem",
                          "fontWeight": 300,
                          "letterSpacing": "0.03333em",
                          "lineHeight": 1.66,
                        },
                        "captionNext": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.75rem",
                          "fontWeight": 300,
                          "letterSpacing": "0.03333em",
                          "lineHeight": 1.66,
                        },
                        "display1": Object {
                          "color": "rgba(0, 0, 0, 0.54)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "2.125rem",
                          "fontWeight": 300,
                          "lineHeight": "1.20588em",
                        },
                        "display2": Object {
                          "color": "rgba(0, 0, 0, 0.54)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "2.8125rem",
                          "fontWeight": 300,
                          "lineHeight": "1.13333em",
                          "marginLeft": "-.02em",
                        },
                        "display3": Object {
                          "color": "rgba(0, 0, 0, 0.54)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "3.5rem",
                          "fontWeight": 300,
                          "letterSpacing": "-.02em",
                          "lineHeight": "1.30357em",
                          "marginLeft": "-.02em",
                        },
                        "display4": Object {
                          "color": "rgba(0, 0, 0, 0.54)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "7rem",
                          "fontWeight": 200,
                          "letterSpacing": "-.04em",
                          "lineHeight": "1.14286em",
                          "marginLeft": "-.04em",
                        },
                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                        "fontSize": 14,
                        "fontWeightLight": 200,
                        "fontWeightMedium": 400,
                        "fontWeightRegular": 300,
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "6rem",
                          "fontWeight": 200,
                          "letterSpacing": "-0.01562em",
                          "lineHeight": 1,
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "3.75rem",
                          "fontWeight": 200,
                          "letterSpacing": "-0.00833em",
                          "lineHeight": 1,
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "3rem",
                          "fontWeight": 300,
                          "letterSpacing": "0em",
                          "lineHeight": 1.04,
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "2.125rem",
                          "fontWeight": 300,
                          "letterSpacing": "0.00735em",
                          "lineHeight": 1.17,
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1.5rem",
                          "fontWeight": 300,
                          "letterSpacing": "0em",
                          "lineHeight": 1.33,
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1.25rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.0075em",
                          "lineHeight": 1.6,
                        },
                        "headline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1.5rem",
                          "fontWeight": 300,
                          "lineHeight": "1.35417em",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.75rem",
                          "fontWeight": 300,
                          "letterSpacing": "0.08333em",
                          "lineHeight": 2.66,
                          "textTransform": "uppercase",
                        },
                        "pxToRem": [Function],
                        "round": [Function],
                        "subheading": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1rem",
                          "fontWeight": 300,
                          "lineHeight": "1.5em",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1rem",
                          "fontWeight": 300,
                          "letterSpacing": "0.00938em",
                          "lineHeight": 1.75,
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "0.875rem",
                          "fontWeight": 400,
                          "letterSpacing": "0.00714em",
                          "lineHeight": 1.57,
                        },
                        "suppressDeprecationWarnings": true,
                        "title": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                          "fontSize": "1.3125rem",
                          "fontWeight": 400,
                          "lineHeight": "1.16667em",
                        },
                        "useNextVariants": true,
                      },
                      "zIndex": Object {
                        "appBar": 1100,
                        "drawer": 1200,
                        "mobileStepper": 1000,
                        "modal": 1300,
                        "snackbar": 1400,
                        "tooltip": 1500,
                      },
                    }
                  }
                >
                  <WithStyles(Grid)
                    className="StandardPage"
                    container={true}
                  >
                    <Grid
                      alignContent="stretch"
                      alignItems="stretch"
                      className="StandardPage"
                      classes={
                        Object {
                          "align-content-xs-center": "MuiGrid-align-content-xs-center-15",
                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-17",
                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-16",
                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-19",
                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-18",
                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-14",
                          "align-items-xs-center": "MuiGrid-align-items-xs-center-11",
                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-13",
                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-12",
                          "container": "MuiGrid-container-3",
                          "direction-xs-column": "MuiGrid-direction-xs-column-6",
                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-7",
                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-8",
                          "grid-lg-1": "MuiGrid-grid-lg-1-74",
                          "grid-lg-10": "MuiGrid-grid-lg-10-83",
                          "grid-lg-11": "MuiGrid-grid-lg-11-84",
                          "grid-lg-12": "MuiGrid-grid-lg-12-85",
                          "grid-lg-2": "MuiGrid-grid-lg-2-75",
                          "grid-lg-3": "MuiGrid-grid-lg-3-76",
                          "grid-lg-4": "MuiGrid-grid-lg-4-77",
                          "grid-lg-5": "MuiGrid-grid-lg-5-78",
                          "grid-lg-6": "MuiGrid-grid-lg-6-79",
                          "grid-lg-7": "MuiGrid-grid-lg-7-80",
                          "grid-lg-8": "MuiGrid-grid-lg-8-81",
                          "grid-lg-9": "MuiGrid-grid-lg-9-82",
                          "grid-lg-auto": "MuiGrid-grid-lg-auto-72",
                          "grid-lg-true": "MuiGrid-grid-lg-true-73",
                          "grid-md-1": "MuiGrid-grid-md-1-60",
                          "grid-md-10": "MuiGrid-grid-md-10-69",
                          "grid-md-11": "MuiGrid-grid-md-11-70",
                          "grid-md-12": "MuiGrid-grid-md-12-71",
                          "grid-md-2": "MuiGrid-grid-md-2-61",
                          "grid-md-3": "MuiGrid-grid-md-3-62",
                          "grid-md-4": "MuiGrid-grid-md-4-63",
                          "grid-md-5": "MuiGrid-grid-md-5-64",
                          "grid-md-6": "MuiGrid-grid-md-6-65",
                          "grid-md-7": "MuiGrid-grid-md-7-66",
                          "grid-md-8": "MuiGrid-grid-md-8-67",
                          "grid-md-9": "MuiGrid-grid-md-9-68",
                          "grid-md-auto": "MuiGrid-grid-md-auto-58",
                          "grid-md-true": "MuiGrid-grid-md-true-59",
                          "grid-sm-1": "MuiGrid-grid-sm-1-46",
                          "grid-sm-10": "MuiGrid-grid-sm-10-55",
                          "grid-sm-11": "MuiGrid-grid-sm-11-56",
                          "grid-sm-12": "MuiGrid-grid-sm-12-57",
                          "grid-sm-2": "MuiGrid-grid-sm-2-47",
                          "grid-sm-3": "MuiGrid-grid-sm-3-48",
                          "grid-sm-4": "MuiGrid-grid-sm-4-49",
                          "grid-sm-5": "MuiGrid-grid-sm-5-50",
                          "grid-sm-6": "MuiGrid-grid-sm-6-51",
                          "grid-sm-7": "MuiGrid-grid-sm-7-52",
                          "grid-sm-8": "MuiGrid-grid-sm-8-53",
                          "grid-sm-9": "MuiGrid-grid-sm-9-54",
                          "grid-sm-auto": "MuiGrid-grid-sm-auto-44",
                          "grid-sm-true": "MuiGrid-grid-sm-true-45",
                          "grid-xl-1": "MuiGrid-grid-xl-1-88",
                          "grid-xl-10": "MuiGrid-grid-xl-10-97",
                          "grid-xl-11": "MuiGrid-grid-xl-11-98",
                          "grid-xl-12": "MuiGrid-grid-xl-12-99",
                          "grid-xl-2": "MuiGrid-grid-xl-2-89",
                          "grid-xl-3": "MuiGrid-grid-xl-3-90",
                          "grid-xl-4": "MuiGrid-grid-xl-4-91",
                          "grid-xl-5": "MuiGrid-grid-xl-5-92",
                          "grid-xl-6": "MuiGrid-grid-xl-6-93",
                          "grid-xl-7": "MuiGrid-grid-xl-7-94",
                          "grid-xl-8": "MuiGrid-grid-xl-8-95",
                          "grid-xl-9": "MuiGrid-grid-xl-9-96",
                          "grid-xl-auto": "MuiGrid-grid-xl-auto-86",
                          "grid-xl-true": "MuiGrid-grid-xl-true-87",
                          "grid-xs-1": "MuiGrid-grid-xs-1-32",
                          "grid-xs-10": "MuiGrid-grid-xs-10-41",
                          "grid-xs-11": "MuiGrid-grid-xs-11-42",
                          "grid-xs-12": "MuiGrid-grid-xs-12-43",
                          "grid-xs-2": "MuiGrid-grid-xs-2-33",
                          "grid-xs-3": "MuiGrid-grid-xs-3-34",
                          "grid-xs-4": "MuiGrid-grid-xs-4-35",
                          "grid-xs-5": "MuiGrid-grid-xs-5-36",
                          "grid-xs-6": "MuiGrid-grid-xs-6-37",
                          "grid-xs-7": "MuiGrid-grid-xs-7-38",
                          "grid-xs-8": "MuiGrid-grid-xs-8-39",
                          "grid-xs-9": "MuiGrid-grid-xs-9-40",
                          "grid-xs-auto": "MuiGrid-grid-xs-auto-30",
                          "grid-xs-true": "MuiGrid-grid-xs-true-31",
                          "item": "MuiGrid-item-4",
                          "justify-xs-center": "MuiGrid-justify-xs-center-20",
                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-21",
                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around-23",
                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between-22",
                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-24",
                          "spacing-xs-16": "MuiGrid-spacing-xs-16-26",
                          "spacing-xs-24": "MuiGrid-spacing-xs-24-27",
                          "spacing-xs-32": "MuiGrid-spacing-xs-32-28",
                          "spacing-xs-40": "MuiGrid-spacing-xs-40-29",
                          "spacing-xs-8": "MuiGrid-spacing-xs-8-25",
                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-9",
                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-10",
                          "zeroMinWidth": "MuiGrid-zeroMinWidth-5",
                        }
                      }
                      component="div"
                      container={true}
                      direction="row"
                      item={false}
                      justify="flex-start"
                      lg={false}
                      md={false}
                      sm={false}
                      spacing={0}
                      wrap="wrap"
                      xl={false}
                      xs={false}
                      zeroMinWidth={false}
                    >
                      <div
                        className="MuiGrid-container-3 StandardPage"
                      >
                        <WithStyles(Grid)
                          className="Page-layoutCard-1"
                          item={true}
                        >
                          <Grid
                            alignContent="stretch"
                            alignItems="stretch"
                            className="Page-layoutCard-1"
                            classes={
                              Object {
                                "align-content-xs-center": "MuiGrid-align-content-xs-center-15",
                                "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-17",
                                "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-16",
                                "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-19",
                                "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-18",
                                "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-14",
                                "align-items-xs-center": "MuiGrid-align-items-xs-center-11",
                                "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-13",
                                "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-12",
                                "container": "MuiGrid-container-3",
                                "direction-xs-column": "MuiGrid-direction-xs-column-6",
                                "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-7",
                                "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-8",
                                "grid-lg-1": "MuiGrid-grid-lg-1-74",
                                "grid-lg-10": "MuiGrid-grid-lg-10-83",
                                "grid-lg-11": "MuiGrid-grid-lg-11-84",
                                "grid-lg-12": "MuiGrid-grid-lg-12-85",
                                "grid-lg-2": "MuiGrid-grid-lg-2-75",
                                "grid-lg-3": "MuiGrid-grid-lg-3-76",
                                "grid-lg-4": "MuiGrid-grid-lg-4-77",
                                "grid-lg-5": "MuiGrid-grid-lg-5-78",
                                "grid-lg-6": "MuiGrid-grid-lg-6-79",
                                "grid-lg-7": "MuiGrid-grid-lg-7-80",
                                "grid-lg-8": "MuiGrid-grid-lg-8-81",
                                "grid-lg-9": "MuiGrid-grid-lg-9-82",
                                "grid-lg-auto": "MuiGrid-grid-lg-auto-72",
                                "grid-lg-true": "MuiGrid-grid-lg-true-73",
                                "grid-md-1": "MuiGrid-grid-md-1-60",
                                "grid-md-10": "MuiGrid-grid-md-10-69",
                                "grid-md-11": "MuiGrid-grid-md-11-70",
                                "grid-md-12": "MuiGrid-grid-md-12-71",
                                "grid-md-2": "MuiGrid-grid-md-2-61",
                                "grid-md-3": "MuiGrid-grid-md-3-62",
                                "grid-md-4": "MuiGrid-grid-md-4-63",
                                "grid-md-5": "MuiGrid-grid-md-5-64",
                                "grid-md-6": "MuiGrid-grid-md-6-65",
                                "grid-md-7": "MuiGrid-grid-md-7-66",
                                "grid-md-8": "MuiGrid-grid-md-8-67",
                                "grid-md-9": "MuiGrid-grid-md-9-68",
                                "grid-md-auto": "MuiGrid-grid-md-auto-58",
                                "grid-md-true": "MuiGrid-grid-md-true-59",
                                "grid-sm-1": "MuiGrid-grid-sm-1-46",
                                "grid-sm-10": "MuiGrid-grid-sm-10-55",
                                "grid-sm-11": "MuiGrid-grid-sm-11-56",
                                "grid-sm-12": "MuiGrid-grid-sm-12-57",
                                "grid-sm-2": "MuiGrid-grid-sm-2-47",
                                "grid-sm-3": "MuiGrid-grid-sm-3-48",
                                "grid-sm-4": "MuiGrid-grid-sm-4-49",
                                "grid-sm-5": "MuiGrid-grid-sm-5-50",
                                "grid-sm-6": "MuiGrid-grid-sm-6-51",
                                "grid-sm-7": "MuiGrid-grid-sm-7-52",
                                "grid-sm-8": "MuiGrid-grid-sm-8-53",
                                "grid-sm-9": "MuiGrid-grid-sm-9-54",
                                "grid-sm-auto": "MuiGrid-grid-sm-auto-44",
                                "grid-sm-true": "MuiGrid-grid-sm-true-45",
                                "grid-xl-1": "MuiGrid-grid-xl-1-88",
                                "grid-xl-10": "MuiGrid-grid-xl-10-97",
                                "grid-xl-11": "MuiGrid-grid-xl-11-98",
                                "grid-xl-12": "MuiGrid-grid-xl-12-99",
                                "grid-xl-2": "MuiGrid-grid-xl-2-89",
                                "grid-xl-3": "MuiGrid-grid-xl-3-90",
                                "grid-xl-4": "MuiGrid-grid-xl-4-91",
                                "grid-xl-5": "MuiGrid-grid-xl-5-92",
                                "grid-xl-6": "MuiGrid-grid-xl-6-93",
                                "grid-xl-7": "MuiGrid-grid-xl-7-94",
                                "grid-xl-8": "MuiGrid-grid-xl-8-95",
                                "grid-xl-9": "MuiGrid-grid-xl-9-96",
                                "grid-xl-auto": "MuiGrid-grid-xl-auto-86",
                                "grid-xl-true": "MuiGrid-grid-xl-true-87",
                                "grid-xs-1": "MuiGrid-grid-xs-1-32",
                                "grid-xs-10": "MuiGrid-grid-xs-10-41",
                                "grid-xs-11": "MuiGrid-grid-xs-11-42",
                                "grid-xs-12": "MuiGrid-grid-xs-12-43",
                                "grid-xs-2": "MuiGrid-grid-xs-2-33",
                                "grid-xs-3": "MuiGrid-grid-xs-3-34",
                                "grid-xs-4": "MuiGrid-grid-xs-4-35",
                                "grid-xs-5": "MuiGrid-grid-xs-5-36",
                                "grid-xs-6": "MuiGrid-grid-xs-6-37",
                                "grid-xs-7": "MuiGrid-grid-xs-7-38",
                                "grid-xs-8": "MuiGrid-grid-xs-8-39",
                                "grid-xs-9": "MuiGrid-grid-xs-9-40",
                                "grid-xs-auto": "MuiGrid-grid-xs-auto-30",
                                "grid-xs-true": "MuiGrid-grid-xs-true-31",
                                "item": "MuiGrid-item-4",
                                "justify-xs-center": "MuiGrid-justify-xs-center-20",
                                "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-21",
                                "justify-xs-space-around": "MuiGrid-justify-xs-space-around-23",
                                "justify-xs-space-between": "MuiGrid-justify-xs-space-between-22",
                                "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-24",
                                "spacing-xs-16": "MuiGrid-spacing-xs-16-26",
                                "spacing-xs-24": "MuiGrid-spacing-xs-24-27",
                                "spacing-xs-32": "MuiGrid-spacing-xs-32-28",
                                "spacing-xs-40": "MuiGrid-spacing-xs-40-29",
                                "spacing-xs-8": "MuiGrid-spacing-xs-8-25",
                                "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-9",
                                "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-10",
                                "zeroMinWidth": "MuiGrid-zeroMinWidth-5",
                              }
                            }
                            component="div"
                            container={false}
                            direction="row"
                            item={true}
                            justify="flex-start"
                            lg={false}
                            md={false}
                            sm={false}
                            spacing={0}
                            wrap="wrap"
                            xl={false}
                            xs={false}
                            zeroMinWidth={false}
                          >
                            <div
                              className="MuiGrid-item-4 Page-layoutCard-1"
                            >
                              <WithStyles(Grid)
                                container={true}
                                spacing={24}
                              >
                                <Grid
                                  alignContent="stretch"
                                  alignItems="stretch"
                                  classes={
                                    Object {
                                      "align-content-xs-center": "MuiGrid-align-content-xs-center-15",
                                      "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end-17",
                                      "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start-16",
                                      "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around-19",
                                      "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between-18",
                                      "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline-14",
                                      "align-items-xs-center": "MuiGrid-align-items-xs-center-11",
                                      "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end-13",
                                      "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start-12",
                                      "container": "MuiGrid-container-3",
                                      "direction-xs-column": "MuiGrid-direction-xs-column-6",
                                      "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse-7",
                                      "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse-8",
                                      "grid-lg-1": "MuiGrid-grid-lg-1-74",
                                      "grid-lg-10": "MuiGrid-grid-lg-10-83",
                                      "grid-lg-11": "MuiGrid-grid-lg-11-84",
                                      "grid-lg-12": "MuiGrid-grid-lg-12-85",
                                      "grid-lg-2": "MuiGrid-grid-lg-2-75",
                                      "grid-lg-3": "MuiGrid-grid-lg-3-76",
                                      "grid-lg-4": "MuiGrid-grid-lg-4-77",
                                      "grid-lg-5": "MuiGrid-grid-lg-5-78",
                                      "grid-lg-6": "MuiGrid-grid-lg-6-79",
                                      "grid-lg-7": "MuiGrid-grid-lg-7-80",
                                      "grid-lg-8": "MuiGrid-grid-lg-8-81",
                                      "grid-lg-9": "MuiGrid-grid-lg-9-82",
                                      "grid-lg-auto": "MuiGrid-grid-lg-auto-72",
                                      "grid-lg-true": "MuiGrid-grid-lg-true-73",
                                      "grid-md-1": "MuiGrid-grid-md-1-60",
                                      "grid-md-10": "MuiGrid-grid-md-10-69",
                                      "grid-md-11": "MuiGrid-grid-md-11-70",
                                      "grid-md-12": "MuiGrid-grid-md-12-71",
                                      "grid-md-2": "MuiGrid-grid-md-2-61",
                                      "grid-md-3": "MuiGrid-grid-md-3-62",
                                      "grid-md-4": "MuiGrid-grid-md-4-63",
                                      "grid-md-5": "MuiGrid-grid-md-5-64",
                                      "grid-md-6": "MuiGrid-grid-md-6-65",
                                      "grid-md-7": "MuiGrid-grid-md-7-66",
                                      "grid-md-8": "MuiGrid-grid-md-8-67",
                                      "grid-md-9": "MuiGrid-grid-md-9-68",
                                      "grid-md-auto": "MuiGrid-grid-md-auto-58",
                                      "grid-md-true": "MuiGrid-grid-md-true-59",
                                      "grid-sm-1": "MuiGrid-grid-sm-1-46",
                                      "grid-sm-10": "MuiGrid-grid-sm-10-55",
                                      "grid-sm-11": "MuiGrid-grid-sm-11-56",
                                      "grid-sm-12": "MuiGrid-grid-sm-12-57",
                                      "grid-sm-2": "MuiGrid-grid-sm-2-47",
                                      "grid-sm-3": "MuiGrid-grid-sm-3-48",
                                      "grid-sm-4": "MuiGrid-grid-sm-4-49",
                                      "grid-sm-5": "MuiGrid-grid-sm-5-50",
                                      "grid-sm-6": "MuiGrid-grid-sm-6-51",
                                      "grid-sm-7": "MuiGrid-grid-sm-7-52",
                                      "grid-sm-8": "MuiGrid-grid-sm-8-53",
                                      "grid-sm-9": "MuiGrid-grid-sm-9-54",
                                      "grid-sm-auto": "MuiGrid-grid-sm-auto-44",
                                      "grid-sm-true": "MuiGrid-grid-sm-true-45",
                                      "grid-xl-1": "MuiGrid-grid-xl-1-88",
                                      "grid-xl-10": "MuiGrid-grid-xl-10-97",
                                      "grid-xl-11": "MuiGrid-grid-xl-11-98",
                                      "grid-xl-12": "MuiGrid-grid-xl-12-99",
                                      "grid-xl-2": "MuiGrid-grid-xl-2-89",
                                      "grid-xl-3": "MuiGrid-grid-xl-3-90",
                                      "grid-xl-4": "MuiGrid-grid-xl-4-91",
                                      "grid-xl-5": "MuiGrid-grid-xl-5-92",
                                      "grid-xl-6": "MuiGrid-grid-xl-6-93",
                                      "grid-xl-7": "MuiGrid-grid-xl-7-94",
                                      "grid-xl-8": "MuiGrid-grid-xl-8-95",
                                      "grid-xl-9": "MuiGrid-grid-xl-9-96",
                                      "grid-xl-auto": "MuiGrid-grid-xl-auto-86",
                                      "grid-xl-true": "MuiGrid-grid-xl-true-87",
                                      "grid-xs-1": "MuiGrid-grid-xs-1-32",
                                      "grid-xs-10": "MuiGrid-grid-xs-10-41",
                                      "grid-xs-11": "MuiGrid-grid-xs-11-42",
                                      "grid-xs-12": "MuiGrid-grid-xs-12-43",
                                      "grid-xs-2": "MuiGrid-grid-xs-2-33",
                                      "grid-xs-3": "MuiGrid-grid-xs-3-34",
                                      "grid-xs-4": "MuiGrid-grid-xs-4-35",
                                      "grid-xs-5": "MuiGrid-grid-xs-5-36",
                                      "grid-xs-6": "MuiGrid-grid-xs-6-37",
                                      "grid-xs-7": "MuiGrid-grid-xs-7-38",
                                      "grid-xs-8": "MuiGrid-grid-xs-8-39",
                                      "grid-xs-9": "MuiGrid-grid-xs-9-40",
                                      "grid-xs-auto": "MuiGrid-grid-xs-auto-30",
                                      "grid-xs-true": "MuiGrid-grid-xs-true-31",
                                      "item": "MuiGrid-item-4",
                                      "justify-xs-center": "MuiGrid-justify-xs-center-20",
                                      "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end-21",
                                      "justify-xs-space-around": "MuiGrid-justify-xs-space-around-23",
                                      "justify-xs-space-between": "MuiGrid-justify-xs-space-between-22",
                                      "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly-24",
                                      "spacing-xs-16": "MuiGrid-spacing-xs-16-26",
                                      "spacing-xs-24": "MuiGrid-spacing-xs-24-27",
                                      "spacing-xs-32": "MuiGrid-spacing-xs-32-28",
                                      "spacing-xs-40": "MuiGrid-spacing-xs-40-29",
                                      "spacing-xs-8": "MuiGrid-spacing-xs-8-25",
                                      "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap-9",
                                      "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse-10",
                                      "zeroMinWidth": "MuiGrid-zeroMinWidth-5",
                                    }
                                  }
                                  component="div"
                                  container={true}
                                  direction="row"
                                  item={false}
                                  justify="flex-start"
                                  lg={false}
                                  md={false}
                                  sm={false}
                                  spacing={24}
                                  wrap="wrap"
                                  xl={false}
                                  xs={false}
                                  zeroMinWidth={false}
                                >
                                  <div
                                    className="MuiGrid-container-3 MuiGrid-spacing-xs-24-27"
                                  />
                                </Grid>
                              </WithStyles(Grid)>
                            </div>
                          </Grid>
                        </WithStyles(Grid)>
                      </div>
                    </Grid>
                  </WithStyles(Grid)>
                </Page>
              </WithStyles(Page)>
            </StandardPage>
          </DashboardClass>
        </MuiPickersUtilsProvider>
      </MuiThemeProvider>
    </Router>
  </MemoryRouter>
</Provider>
`;
